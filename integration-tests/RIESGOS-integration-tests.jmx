<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="RIESGOS Integration Tests" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">localhost</stringProp>
        <stringProp name="HTTPSampler.port">8080</stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
        <stringProp name="HTTPSampler.path">/wps/WebProcessingService</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout">5000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:48.0) Gecko/20100101 Firefox/48.0</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">*/*</stringProp>
          </elementProp>
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
          </elementProp>
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="WPS 2.0.0 Basics (HTTP GET)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="service" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">WPS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">service</stringProp>
              </elementProp>
              <elementProp name="version" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2.0.0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">version</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCapabilities" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">GetCapabilities</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="GetCapabilities Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2060876977">&lt;wps:Capabilities xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlin=&quot;http://www.w3.org/1999/xlink&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot; service=&quot;WPS&quot; version=&quot;2.0.0&quot;&gt;</stringProp>
              <stringProp name="-960597434">&lt;ows:ServiceIdentification&gt;</stringProp>
              <stringProp name="-119065327">&lt;ows:Title&gt;</stringProp>
              <stringProp name="542695331">&lt;ows:ServiceProvider&gt;</stringProp>
              <stringProp name="577220120">&lt;ows:OperationsMetadata&gt;</stringProp>
              <stringProp name="2072340308">&lt;ows:Operation name=&quot;GetCapabilities&quot;&gt;</stringProp>
              <stringProp name="-1832403892">&lt;ows:Operation name=&quot;DescribeProcess&quot;&gt;</stringProp>
              <stringProp name="2116360797">&lt;ows:Operation name=&quot;Execute&quot;&gt;</stringProp>
              <stringProp name="1865761296">&lt;ows:Operation name=&quot;GetStatus&quot;&gt;</stringProp>
              <stringProp name="211278715">&lt;ows:Operation name=&quot;GetResult&quot;&gt;</stringProp>
              <stringProp name="2053777966">&lt;ows:Languages&gt;</stringProp>
              <stringProp name="-953567544">&lt;wps:Contents&gt;</stringProp>
              <stringProp name="-557152685">&lt;wps:ProcessSummary</stringProp>
              <stringProp name="-1705366112">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapTransformationProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="672532136">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="1807263111">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="846426406">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-1979994508">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-966461479">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.AssetmasterProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-1609810899">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlTransformationProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-1558235309">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ModelpropProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-307387943">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-629903794">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlCacheReader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-1607924863">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapCacheReader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-577644921">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLCacheReader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-1895295721">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedAssetmasterProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-3896303">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedModelpropProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="1648935643">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedFlooddamageTiffDownloader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-499620726">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.GeotiffBindingCacheReader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="1172982579">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.JSONCacheReader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-256302106">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedShakygroundProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="1386138546">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedFlooddamageProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="878428869">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedQuakeledgerProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="1227617234">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.SystemReliabilityProcess&lt;/ows:Identifier&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess Quakeledger" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1670952003">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;QuakeledgerProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;This is the description of the quakeledger process.&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;input-boundingbox&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;bounding box for spatial search&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;input-boundingbox&lt;/ows:Identifier&gt;
        &lt;wps:BoundingBoxData&gt;
          &lt;wps:Format mimeType=&quot;text/xml&quot; default=&quot;true&quot;/&gt;
          &lt;wps:SupportedCRS default=&quot;true&quot;&gt;EPSG:4326&lt;/wps:SupportedCRS&gt;
          &lt;wps:SupportedCRS&gt;EPSG:4328&lt;/wps:SupportedCRS&gt;
        &lt;/wps:BoundingBoxData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;mmin&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;minimum magnitude&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;mmin&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;6.6&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;mmax&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;maximum magnitude&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;mmax&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;8.5&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;zmin&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;minimum depth&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;zmin&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;5&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;zmax&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;maximum depth&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;zmax&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;140&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;p&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;probability for stochastic etype&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;p&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;0.1&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;etype&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;type of the event from the catalogue&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;etype&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;observed&lt;/ows:Value&gt;
              &lt;ows:Value&gt;deaggregation&lt;/ows:Value&gt;
              &lt;ows:Value&gt;stochastic&lt;/ows:Value&gt;
              &lt;ows:Value&gt;expert&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;deaggregation&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;tlon&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;longitude position of the site for deaggregation&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;tlon&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-71.5730623712764&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;tlat&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;latitude position of the site for deaggregation&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;tlat&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-33.1299174879672&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRows&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;resulting quakeml&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;selectedRows&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess CachedQuakeledger" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.CachedQuakeledgerProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1902448068">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;CachedQuakeledgerProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to read from the cache for the process QuakeledgerProcess&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedQuakeledgerProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to lookup the existing results for the process&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRows&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;resulting quakeml&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;selectedRows&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess Shakyground" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-817528552">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;ShakygroundProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;This is the description of the shakyground process&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;quakeMLFile&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;quakeML to use for computing the shakemap&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;quakeMLFile&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;shakeMapFile&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;resulting shakemap&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;shakeMapFile&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WMS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess CachedShakyground" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.CachedShakygroundProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1008927485">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;CachedShakygroundProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to read from the cache for the process ShakygroundProcess&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedShakygroundProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to lookup the existing results for the process&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;shakeMapFile&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;resulting shakemap&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;shakeMapFile&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WMS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess Assetmaster" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.AssetmasterProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-463033061">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;AssetmasterProcess&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.AssetmasterProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;lonmin&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;lonmin&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-71.8&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;lonmax&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;lonmax&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-71.4&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;latmin&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;latmin&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-33.2&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;latmax&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;latmax&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-33.0&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;schema&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;schema&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;SARA_v1.0&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;SARA_v1.0&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;assettype&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;assettype&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;res&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;res&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;querymode&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;querymode&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;intersects&lt;/ows:Value&gt;
              &lt;ows:Value&gt;within&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;intersects&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRowsXml&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRowsXml&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRowsGeoJson&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRowsGeoJson&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess CachedAssetmaster" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.CachedAssetmasterProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="89231442">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;CachedAssetmasterProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to read from the cache for the process AssetmasterProcess&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedAssetmasterProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to lookup the existing results for the process&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRowsXml&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRowsXml&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRowsGeoJson&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRowsGeoJson&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess Modelprop" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.ModelpropProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-460824436">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;ModelpropProcess&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ModelpropProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;schema&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;schema&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;SARA_v1.0&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;SARA_v1.0&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;assetcategory&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;assetcategory&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;buildings&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;buildings&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;losscategory&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;losscategory&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;structural&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;structural&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;taxonomies&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;taxonomies&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRows&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRows&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess CachedModelprop" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.CachedModelpropProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1177298089">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;CachedModelpropProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to read from the cache for the process ModelpropProcess&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedModelpropProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to lookup the existing results for the process&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRows&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRows&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess Flooddamage" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.FlooddamageProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1399356222">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;FlooddamageProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to compute the damage of a flood in ecuador.&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;duration-h&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Tiff file with the duration of the flood in hours&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;duration-h&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;vsmax-ms&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Tiff file with the maximum velocity of the flood in m/s&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;vsmax-ms&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;wdmax-cm&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Tiff file with the maximum water depth of the flood in cm&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;wdmax-cm&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;damage_manzanas&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;geojson with the damage of the manzanas&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_manzanas&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;damage_buildings&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;geojson with the damage on the buildings&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_buildings&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess CachedFlooddamage" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.CachedFlooddamageProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1751847644">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;CachedFlooddamageProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to read from the cache for the process FlooddamageProcess&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedFlooddamageProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to lookup the existing results for the process&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;damage_manzanas&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;geojson with the damage of the manzanas&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_manzanas&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;damage_buildings&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;geojson with the damage on the buildings&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_buildings&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess SystemReliability" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.SystemReliabilityProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-680567776">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;SystemReliabilityProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process for performing the reliability of infrastructure networks&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.SystemReliabilityProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;damage_nodes&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Output from Damage web-service&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_nodes&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/vnd.google-earth.kml+xml&quot; schema=&quot;http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-wkt&quot; encoding=&quot;Base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://geoserver.itc.nl:8080/wps/schemas/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://www.opengeospatial.org/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;exposure_lines&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Information of the exposure corresponding to the topology of the network&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;exposure_lines&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/vnd.google-earth.kml+xml&quot; schema=&quot;http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-wkt&quot; encoding=&quot;Base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://geoserver.itc.nl:8080/wps/schemas/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://www.opengeospatial.org/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;exposure_consumer_areas&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Information of the exposure corresponding to the consumer areas&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;exposure_consumer_areas&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/vnd.google-earth.kml+xml&quot; schema=&quot;http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-wkt&quot; encoding=&quot;Base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://geoserver.itc.nl:8080/wps/schemas/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://www.opengeospatial.org/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;network_fragility&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Information about the fragility parameters for the network taxonomy&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;network_fragility&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/vnd.google-earth.kml+xml&quot; schema=&quot;http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-wkt&quot; encoding=&quot;Base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://geoserver.itc.nl:8080/wps/schemas/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://www.opengeospatial.org/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;damage_consumer_areas&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Damage in the consumer areas&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_consumer_areas&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/WMS&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.google-earth.kml+xml&quot; schema=&quot;http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://geoserver.itc.nl:8080/wps/schemas/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://www.opengeospatial.org/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess FlooddamageTiffDownloader" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1225054905">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;FlooddamageTiffDownloader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;base-url&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;base-url&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;https://www.sd-kama.de/geoserver/rain_cotopaxi/wcs&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;coverage-id&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;coverage-id&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;rain_cotopaxi:duration_latacunga_city&lt;/ows:Value&gt;
              &lt;ows:Value&gt;rain_cotopaxi:duration_latacunga_north&lt;/ows:Value&gt;
              &lt;ows:Value&gt;rain_cotopaxi:v_at_wdmax_latacunga_city&lt;/ows:Value&gt;
              &lt;ows:Value&gt;rain_cotopaxi:v_at_wdmax_latacunga_north&lt;/ows:Value&gt;
              &lt;ows:Value&gt;rain_cotopaxi:wd_max_latacunga_city&lt;/ows:Value&gt;
              &lt;ows:Value&gt;rain_cotopaxi:wd_max_latacunga_north&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;output-tiff&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;output-tiff&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/WMS&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/tiff&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/tiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WFS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess QuakeMLCacheReader" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.QuakeMLCacheReader</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1468353126">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;QuakeMLCacheReader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLCacheReader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to read the data out&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Output-Name&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the name of the data for which the cached dataset contains the dataset&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Output-Name&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;Output&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;Output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess ShakemapCacheReader" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.ShakemapCacheReader</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1479652778">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;ShakemapCacheReader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapCacheReader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to read the data out&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Output-Name&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the name of the data for which the cached dataset contains the dataset&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Output-Name&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;Output&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;Output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WMS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess NrmlCacheReader" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.NrmlCacheReader</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="765075702">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;NrmlCacheReader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlCacheReader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to read the data out&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Output-Name&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the name of the data for which the cached dataset contains the dataset&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Output-Name&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;Output&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;Output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess GeotiffBindingCacheReader" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.GeotiffBindingCacheReader</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1383551241">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;GeotiffBindingCacheReader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.GeotiffBindingCacheReader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to read the data out&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Output-Name&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the name of the data for which the cached dataset contains the dataset&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Output-Name&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;Output&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;Output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/WMS&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/tiff&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/tiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WFS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess JSONCacheReader" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.JSONCacheReader</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="278424825">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;JSONCacheReader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.JSONCacheReader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to read the data out&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Output-Name&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the name of the data for which the cached dataset contains the dataset&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Output-Name&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;Output&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;Output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess QuakeMLTransformation" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1410178902">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;QuakeMLTransformationProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to transform quakeml between various formats&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;input&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the input parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;input&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;output&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the output parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess ShakemapTransformation" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.ShakemapTransformationProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="574572810">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;ShakemapTransformationProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to transform shakemaps between various formats&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapTransformationProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;input&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the input parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;input&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;output&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the output parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WMS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess NrmlTransformation" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Variables pré-définies" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="request" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">describeProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">request</stringProp>
              </elementProp>
              <elementProp name="identifier" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">org.n52.gfz.riesgos.algorithm.impl.NrmlTransformationProcess</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identifier</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="164189104">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;NrmlTransformationProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to transform nrml between various formats&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlTransformationProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;input&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the input parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;input&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;output&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the output parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="WPS 2.0.0 Basics (XML POST)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:GetCapabilities&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&gt;&#xd;
&lt;/wps:GetCapabilities&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="GetCapabilities Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2060876977">&lt;wps:Capabilities xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlin=&quot;http://www.w3.org/1999/xlink&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot; service=&quot;WPS&quot; version=&quot;2.0.0&quot;&gt;</stringProp>
              <stringProp name="-960597434">&lt;ows:ServiceIdentification&gt;</stringProp>
              <stringProp name="-119065327">&lt;ows:Title&gt;</stringProp>
              <stringProp name="542695331">&lt;ows:ServiceProvider&gt;</stringProp>
              <stringProp name="577220120">&lt;ows:OperationsMetadata&gt;</stringProp>
              <stringProp name="2072340308">&lt;ows:Operation name=&quot;GetCapabilities&quot;&gt;</stringProp>
              <stringProp name="-1832403892">&lt;ows:Operation name=&quot;DescribeProcess&quot;&gt;</stringProp>
              <stringProp name="2116360797">&lt;ows:Operation name=&quot;Execute&quot;&gt;</stringProp>
              <stringProp name="1865761296">&lt;ows:Operation name=&quot;GetStatus&quot;&gt;</stringProp>
              <stringProp name="211278715">&lt;ows:Operation name=&quot;GetResult&quot;&gt;</stringProp>
              <stringProp name="2053777966">&lt;ows:Languages&gt;</stringProp>
              <stringProp name="-953567544">&lt;wps:Contents&gt;</stringProp>
              <stringProp name="-557152685">&lt;wps:ProcessSummary</stringProp>
              <stringProp name="-1705366112">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapTransformationProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="672532136">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="1807263111">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="846426406">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-1979994508">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-966461479">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.AssetmasterProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-1609810899">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlTransformationProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-1558235309">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ModelpropProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-307387943">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-629903794">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlCacheReader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-1607924863">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapCacheReader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-577644921">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLCacheReader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-1895295721">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedAssetmasterProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-3896303">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedModelpropProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="1648935643">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedFlooddamageTiffDownloader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-499620726">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.GeotiffBindingCacheReader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="1172982579">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.JSONCacheReader&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="-256302106">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedShakygroundProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="1386138546">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedFlooddamageProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="878428869">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedQuakeledgerProcess&lt;/ows:Identifier&gt;</stringProp>
              <stringProp name="1227617234">&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.SystemReliabilityProcess&lt;/ows:Identifier&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess Quakeledger" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1670952003">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;QuakeledgerProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;This is the description of the quakeledger process.&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;input-boundingbox&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;bounding box for spatial search&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;input-boundingbox&lt;/ows:Identifier&gt;
        &lt;wps:BoundingBoxData&gt;
          &lt;wps:Format mimeType=&quot;text/xml&quot; default=&quot;true&quot;/&gt;
          &lt;wps:SupportedCRS default=&quot;true&quot;&gt;EPSG:4326&lt;/wps:SupportedCRS&gt;
          &lt;wps:SupportedCRS&gt;EPSG:4328&lt;/wps:SupportedCRS&gt;
        &lt;/wps:BoundingBoxData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;mmin&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;minimum magnitude&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;mmin&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;6.6&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;mmax&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;maximum magnitude&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;mmax&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;8.5&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;zmin&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;minimum depth&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;zmin&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;5&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;zmax&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;maximum depth&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;zmax&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;140&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;p&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;probability for stochastic etype&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;p&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;0.1&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;etype&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;type of the event from the catalogue&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;etype&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;observed&lt;/ows:Value&gt;
              &lt;ows:Value&gt;deaggregation&lt;/ows:Value&gt;
              &lt;ows:Value&gt;stochastic&lt;/ows:Value&gt;
              &lt;ows:Value&gt;expert&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;deaggregation&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;tlon&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;longitude position of the site for deaggregation&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;tlon&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-71.5730623712764&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;tlat&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;latitude position of the site for deaggregation&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;tlat&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-33.1299174879672&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRows&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;resulting quakeml&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;selectedRows&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess CachedQuakeledger" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedQuakeledgerProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1902448068">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;CachedQuakeledgerProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to read from the cache for the process QuakeledgerProcess&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedQuakeledgerProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to lookup the existing results for the process&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRows&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;resulting quakeml&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;selectedRows&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess Shakyground" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-817528552">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;ShakygroundProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;This is the description of the shakyground process&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;quakeMLFile&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;quakeML to use for computing the shakemap&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;quakeMLFile&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;shakeMapFile&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;resulting shakemap&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;shakeMapFile&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WMS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess CachedShakyground" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedShakygroundProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1008927485">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;CachedShakygroundProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to read from the cache for the process ShakygroundProcess&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedShakygroundProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to lookup the existing results for the process&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;shakeMapFile&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;resulting shakemap&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;shakeMapFile&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WMS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess Assetmaster" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.AssetmasterProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-463033061">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;AssetmasterProcess&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.AssetmasterProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;lonmin&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;lonmin&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-71.8&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;lonmax&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;lonmax&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-71.4&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;latmin&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;latmin&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-33.2&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;latmax&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;latmax&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:double&quot;/&gt;
            &lt;ows:DefaultValue&gt;-33.0&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;schema&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;schema&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;SARA_v1.0&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;SARA_v1.0&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;assettype&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;assettype&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;res&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;res&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;querymode&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;querymode&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;intersects&lt;/ows:Value&gt;
              &lt;ows:Value&gt;within&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;intersects&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRowsXml&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRowsXml&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRowsGeoJson&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRowsGeoJson&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess CachedAssetmaster" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedAssetmasterProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="89231442">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;CachedAssetmasterProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to read from the cache for the process AssetmasterProcess&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedAssetmasterProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to lookup the existing results for the process&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRowsXml&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRowsXml&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRowsGeoJson&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRowsGeoJson&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess Modelprop" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ModelpropProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-460824436">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;ModelpropProcess&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ModelpropProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;schema&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;schema&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;SARA_v1.0&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;SARA_v1.0&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;assetcategory&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;assetcategory&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;buildings&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;buildings&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;losscategory&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;losscategory&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;structural&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;structural&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;taxonomies&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;taxonomies&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRows&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRows&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess CachedModelprop" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedModelpropProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1177298089">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;CachedModelpropProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to read from the cache for the process ModelpropProcess&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedModelpropProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to lookup the existing results for the process&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;selectedRows&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;selectedRows&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess Flooddamage" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1399356222">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;FlooddamageProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to compute the damage of a flood in ecuador.&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;duration-h&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Tiff file with the duration of the flood in hours&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;duration-h&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;vsmax-ms&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Tiff file with the maximum velocity of the flood in m/s&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;vsmax-ms&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;wdmax-cm&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Tiff file with the maximum water depth of the flood in cm&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;wdmax-cm&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;damage_manzanas&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;geojson with the damage of the manzanas&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_manzanas&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;damage_buildings&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;geojson with the damage on the buildings&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_buildings&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess CachedFlooddamage" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedFlooddamageProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1751847644">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;CachedFlooddamageProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to read from the cache for the process FlooddamageProcess&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.CachedFlooddamageProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to lookup the existing results for the process&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;damage_manzanas&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;geojson with the damage of the manzanas&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_manzanas&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;damage_buildings&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;geojson with the damage on the buildings&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_buildings&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess SystemReliability" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.SystemReliabilityProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-680567776">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;SystemReliabilityProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process for performing the reliability of infrastructure networks&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.SystemReliabilityProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;damage_nodes&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Output from Damage web-service&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_nodes&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/vnd.google-earth.kml+xml&quot; schema=&quot;http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-wkt&quot; encoding=&quot;Base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://geoserver.itc.nl:8080/wps/schemas/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://www.opengeospatial.org/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;exposure_lines&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Information of the exposure corresponding to the topology of the network&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;exposure_lines&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/vnd.google-earth.kml+xml&quot; schema=&quot;http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-wkt&quot; encoding=&quot;Base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://geoserver.itc.nl:8080/wps/schemas/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://www.opengeospatial.org/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;exposure_consumer_areas&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Information of the exposure corresponding to the consumer areas&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;exposure_consumer_areas&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/vnd.google-earth.kml+xml&quot; schema=&quot;http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-wkt&quot; encoding=&quot;Base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://geoserver.itc.nl:8080/wps/schemas/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://www.opengeospatial.org/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;network_fragility&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Information about the fragility parameters for the network taxonomy&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;network_fragility&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/vnd.google-earth.kml+xml&quot; schema=&quot;http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-wkt&quot; encoding=&quot;Base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://geoserver.itc.nl:8080/wps/schemas/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://www.opengeospatial.org/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;damage_consumer_areas&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;Damage in the consumer areas&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;damage_consumer_areas&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/WMS&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.google-earth.kml+xml&quot; schema=&quot;http://schemas.opengis.net/kml/2.2.0/ogckml22.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/x-zipped-shp&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/2.0.0/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/2.1.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2.1/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.0.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.0.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.0&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.0/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.1.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.1.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml; subtype=gml/3.2.1&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://geoserver.itc.nl:8080/wps/schemas/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/2.1.2/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; schema=&quot;http://www.opengeospatial.org/gmlpacket.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess FlooddamageTiffDownloader" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1225054905">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;FlooddamageTiffDownloader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;base-url&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;base-url&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
            &lt;ows:DefaultValue&gt;https://www.sd-kama.de/geoserver/rain_cotopaxi/wcs&lt;/ows:DefaultValue&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;coverage-id&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;coverage-id&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AllowedValues&gt;
              &lt;ows:Value&gt;rain_cotopaxi:duration_latacunga_city&lt;/ows:Value&gt;
              &lt;ows:Value&gt;rain_cotopaxi:duration_latacunga_north&lt;/ows:Value&gt;
              &lt;ows:Value&gt;rain_cotopaxi:v_at_wdmax_latacunga_city&lt;/ows:Value&gt;
              &lt;ows:Value&gt;rain_cotopaxi:v_at_wdmax_latacunga_north&lt;/ows:Value&gt;
              &lt;ows:Value&gt;rain_cotopaxi:wd_max_latacunga_city&lt;/ows:Value&gt;
              &lt;ows:Value&gt;rain_cotopaxi:wd_max_latacunga_north&lt;/ows:Value&gt;
            &lt;/ows:AllowedValues&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;output-tiff&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;output-tiff&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/WMS&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/tiff&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/tiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WFS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess QuakeMLCacheReader" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLCacheReader&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1468353126">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;QuakeMLCacheReader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLCacheReader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to read the data out&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Output-Name&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the name of the data for which the cached dataset contains the dataset&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Output-Name&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;Output&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;Output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess ShakemapCacheReader" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapCacheReader&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1479652778">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;ShakemapCacheReader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapCacheReader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to read the data out&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Output-Name&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the name of the data for which the cached dataset contains the dataset&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Output-Name&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;Output&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;Output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WMS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess NrmlCacheReader" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlCacheReader&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="765075702">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;NrmlCacheReader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlCacheReader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to read the data out&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Output-Name&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the name of the data for which the cached dataset contains the dataset&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Output-Name&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;Output&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;Output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess GeotiffBindingCacheReader" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.GeotiffBindingCacheReader&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1383551241">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;GeotiffBindingCacheReader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.GeotiffBindingCacheReader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to read the data out&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Output-Name&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the name of the data for which the cached dataset contains the dataset&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Output-Name&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;Output&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;Output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/WMS&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/tiff&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/tiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WFS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess JSONCacheReader" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.JSONCacheReader&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="278424825">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;JSONCacheReader&lt;/ows:Title&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.JSONCacheReader&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Cache-Key&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the key for the cache to read the data out&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Cache-Key&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Input minOccurs=&quot;0&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;Output-Name&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the name of the data for which the cached dataset contains the dataset&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;Output-Name&lt;/ows:Identifier&gt;
        &lt;wps:LiteralData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/plain&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot;/&gt;
          &lt;LiteralDataDomain&gt;
            &lt;ows:AnyValue/&gt;
            &lt;ows:DataType ows:reference=&quot;xs:string&quot;/&gt;
          &lt;/LiteralDataDomain&gt;
        &lt;/wps:LiteralData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;Output&lt;/ows:Title&gt;
        &lt;ows:Identifier&gt;Output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess QuakeMLTransformation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1410178902">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;QuakeMLTransformationProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to transform quakeml between various formats&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;input&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the input parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;input&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;output&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the output parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd (original; not conform to schema)&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess ShakemapTransformation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapTransformationProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="574572810">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;ShakemapTransformationProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to transform shakemaps between various formats&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapTransformationProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;input&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the input parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;input&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;output&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the output parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;/&gt;
          &lt;ns:Format mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/WMS&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeProcess NrmlTransformation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:DescribeProcess&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 ../wps.xsd&quot;&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlTransformationProcess&lt;/ows:Identifier&gt;&#xd;
&lt;/wps:DescribeProcess&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Description Document" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="164189104">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;wps:ProcessOfferings xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wps.xsd&quot;&gt;
  &lt;wps:ProcessOffering processVersion=&quot;1.0.0&quot; jobControlOptions=&quot;sync-execute async-execute&quot; outputTransmission=&quot;value reference&quot;&gt;
    &lt;wps:Process&gt;
      &lt;ows:Title&gt;NrmlTransformationProcess&lt;/ows:Title&gt;
      &lt;ows:Abstract&gt;Process to transform nrml between various formats&lt;/ows:Abstract&gt;
      &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlTransformationProcess&lt;/ows:Identifier&gt;
      &lt;wps:Input minOccurs=&quot;1&quot; maxOccurs=&quot;1&quot;&gt;
        &lt;ows:Title&gt;input&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the input parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;input&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Input&gt;
      &lt;wps:Output&gt;
        &lt;ows:Title&gt;output&lt;/ows:Title&gt;
        &lt;ows:Abstract&gt;This is the output parameter to transform to other formats&lt;/ows:Abstract&gt;
        &lt;ows:Identifier&gt;output&lt;/ows:Identifier&gt;
        &lt;wps:ComplexData xmlns:ns=&quot;http://www.opengis.net/wps/2.0&quot;&gt;
          &lt;ns:Format default=&quot;true&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot;/&gt;
          &lt;ns:Format mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;/&gt;
        &lt;/wps:ComplexData&gt;
      &lt;/wps:Output&gt;
    &lt;/wps:Process&gt;
  &lt;/wps:ProcessOffering&gt;
&lt;/wps:ProcessOfferings&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="QuakeledgerProcess" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quakeledger with QuakeML output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0        http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;mmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;6.6&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;mmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;8.5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;140&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;p&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;0.1&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;etype&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;deaggregation&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlon&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-71.5730623712764&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlat&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-33.1299174879672&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;input-boundingbox&quot;&gt;&#xd;
        &lt;wps:Data&gt;&#xd;
            &lt;ows:BoundingBox crs=&quot;EPSG:4326&quot; dimensions=&quot;2&quot;&gt;&#xd;
                &lt;ows:LowerCorner&gt;-33.56886118255556 -72.1142578125&lt;/ows:LowerCorner&gt;&#xd;
                &lt;ows:UpperCorner&gt;-32.6671247331203 -70.938720703125&lt;/ows:UpperCorner&gt;&#xd;
            &lt;/ows:BoundingBox&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRows&quot; transmission=&quot;value&quot; mimeType=&quot;text/xml&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="764642112">&lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;</stringProp>
              <stringProp name="341786794">&lt;eventParameters xmlns=&quot;http://quakeml.org/xmlns/bed/1.2&quot; publicID=&quot;quakeml:quakeledger/0&quot;&gt;</stringProp>
              <stringProp name="-35725261">&lt;wps:Output id=&quot;selectedRows&quot;&gt;</stringProp>
              <stringProp name="410180926">&lt;event publicID=&quot;quakeml:quakeledger/</stringProp>
              <stringProp name="1150643915">&lt;preferredOriginID&gt;quakeml:quakeledger/</stringProp>
              <stringProp name="902566475">&lt;preferredMagnitudeID&gt;quakeml:quakeledger/</stringProp>
              <stringProp name="-1567472452">&lt;type&gt;earthquake&lt;/type&gt;</stringProp>
              <stringProp name="1949336062">&lt;description&gt;</stringProp>
              <stringProp name="-1900677184">&lt;text&gt;stochastic&lt;/text&gt;</stringProp>
              <stringProp name="1415197242">&lt;origin publicID=&quot;quakeml:quakeledger/</stringProp>
              <stringProp name="1828113493">&lt;time&gt;</stringProp>
              <stringProp name="1118553100">&lt;uncertainty&gt;</stringProp>
              <stringProp name="-595565418">&lt;latitude&gt;</stringProp>
              <stringProp name="-209805796">&lt;author&gt;GFZ&lt;/author&gt;</stringProp>
              <stringProp name="1643087605">&lt;creationInfo&gt;</stringProp>
              <stringProp name="-1929993902">&lt;originUncertainty&gt;</stringProp>
              <stringProp name="-426642608">&lt;horizontalUncertainty&gt;</stringProp>
              <stringProp name="1042616584">&lt;magnitude publicID=&quot;quakeml:quakeledger/</stringProp>
              <stringProp name="58754951">&lt;mag&gt;</stringProp>
              <stringProp name="886800425">&lt;value&gt;</stringProp>
              <stringProp name="-1475387092">&lt;focalMechanism publicID=&quot;quakeml:quakeledger/</stringProp>
              <stringProp name="2068429366">&lt;nodalPlanes preferredPlane=&quot;1&quot;&gt;</stringProp>
              <stringProp name="2006554039">&lt;nodalPlane1&gt;</stringProp>
              <stringProp name="-392357104">&lt;strike&gt;</stringProp>
              <stringProp name="58494799">&lt;dip&gt;</stringProp>
              <stringProp name="1826026201">&lt;rake&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quakeledger with GeoJSON output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0        http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;mmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;6.6&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;mmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;8.5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;140&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;p&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;0.1&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;etype&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;deaggregation&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlon&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-71.5730623712764&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlat&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-33.1299174879672&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;input-boundingbox&quot;&gt;&#xd;
        &lt;wps:Data&gt;&#xd;
            &lt;ows:BoundingBox crs=&quot;EPSG:4326&quot; dimensions=&quot;2&quot;&gt;&#xd;
                &lt;ows:LowerCorner&gt;-33.56886118255556 -72.1142578125&lt;/ows:LowerCorner&gt;&#xd;
                &lt;ows:UpperCorner&gt;-32.6671247331203 -70.938720703125&lt;/ows:UpperCorner&gt;&#xd;
            &lt;/ows:BoundingBox&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRows&quot; transmission=&quot;value&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-129447952">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;</stringProp>
              <stringProp name="-11762371">{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;Point&quot;,&quot;coordinates&quot;:[</stringProp>
              <stringProp name="-35725261">&lt;wps:Output id=&quot;selectedRows&quot;&gt;</stringProp>
              <stringProp name="1396262544">&quot;description.text&quot;:&quot;stochastic&quot;</stringProp>
              <stringProp name="-1139426382">&quot;preferredOriginID&quot;:&quot;quakeml:quakeledger</stringProp>
              <stringProp name="-2112307394">&quot;preferredMagnitudeID&quot;:&quot;quakeml:quakeledger</stringProp>
              <stringProp name="1622007623">&quot;type&quot;:&quot;earthquake&quot;</stringProp>
              <stringProp name="1667767388">&quot;origin.publicID&quot;:&quot;quakeml:quakeledger</stringProp>
              <stringProp name="1511896795">&quot;origin.creationInfo.value&quot;:&quot;GFZ&quot;</stringProp>
              <stringProp name="-414022346">&quot;magnitude.publicID&quot;:&quot;quakeml:quakeledger</stringProp>
              <stringProp name="438197172">&quot;magnitude.mag.value&quot;:&quot;</stringProp>
              <stringProp name="2127778761">&quot;focalMechanism.nodalPlanes.nodalPlane1.strike.value&quot;:&quot;</stringProp>
              <stringProp name="-1707125102">&quot;focalMechanism.nodalPlanes.nodalPlane1.rake.value&quot;:&quot;</stringProp>
              <stringProp name="1209772264">&quot;focalMechanism.nodalPlanes.nodalPlane1.dip.value&quot;:&quot;</stringProp>
              <stringProp name="-1179586008">&quot;magnitude.type&quot;:&quot;MW&quot;</stringProp>
              <stringProp name="-159928895">&quot;magnitude.creationInfo.value&quot;:&quot;GFZ&quot;</stringProp>
              <stringProp name="939949005">&quot;focalMechanism.nodalPlanes.preferredPlane&quot;:&quot;nodalPlane1&quot;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-124005002">&quot;publicID&quot;:&quot;quakeml:quakeledger\/105601&quot;</stringProp>
              <stringProp name="1329739188">&quot;properties&quot;:{&quot;</stringProp>
              <stringProp name="1546290972">&quot;preferredOriginID&quot;:&quot;quakeml:quakeledger\/105601&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quakeledger with GML output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0        http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;mmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;6.6&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;mmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;8.5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;140&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;p&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;0.1&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;etype&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;deaggregation&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlon&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-71.5730623712764&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlat&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-33.1299174879672&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;input-boundingbox&quot;&gt;&#xd;
        &lt;wps:Data&gt;&#xd;
            &lt;ows:BoundingBox crs=&quot;EPSG:4326&quot; dimensions=&quot;2&quot;&gt;&#xd;
                &lt;ows:LowerCorner&gt;-33.56886118255556 -72.1142578125&lt;/ows:LowerCorner&gt;&#xd;
                &lt;ows:UpperCorner&gt;-32.6671247331203 -70.938720703125&lt;/ows:UpperCorner&gt;&#xd;
            &lt;/ows:BoundingBox&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRows&quot; transmission=&quot;value&quot; mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-516217402">&lt;wps:Data schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;</stringProp>
              <stringProp name="-1429770921">&lt;gml:FeatureCollection xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot; xmlns:n52=&quot;</stringProp>
              <stringProp name="-35725261">&lt;wps:Output id=&quot;selectedRows&quot;&gt;</stringProp>
              <stringProp name="-708924821">&lt;gml:featureMembers&gt;</stringProp>
              <stringProp name="-519584713">&lt;gml:Point srsDimension=&quot;2&quot;&gt;</stringProp>
              <stringProp name="-11913380">&lt;n52:type&gt;earthquake&lt;/n52:type&gt;</stringProp>
              <stringProp name="-679843424">&lt;n52:description.text&gt;stochastic&lt;/n52:description.text&gt;</stringProp>
              <stringProp name="-2066085635">&lt;n52:origin.publicID&gt;</stringProp>
              <stringProp name="254242801">&lt;n52:origin.time.value&gt;</stringProp>
              <stringProp name="1601351189">&lt;n52:origin.depth.value&gt;</stringProp>
              <stringProp name="-836648270">&lt;n52:origin.creationInfo.value&gt;GFZ&lt;/n52:origin.creationInfo.value&gt;</stringProp>
              <stringProp name="1513009905">&lt;n52:magnitude.publicID&gt;</stringProp>
              <stringProp name="-952522415">&lt;n52:magnitude.mag.value&gt;</stringProp>
              <stringProp name="-1571521733">&lt;n52:magnitude.type&gt;</stringProp>
              <stringProp name="54239160">&lt;n52:magnitude.creationInfo.value&gt;GFZ&lt;/n52:magnitude.creationInfo.value&gt;</stringProp>
              <stringProp name="-1353340981">&lt;n52:focalMechanism.publicID&gt;</stringProp>
              <stringProp name="741260966">&lt;n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;</stringProp>
              <stringProp name="-1901175597">&lt;n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;</stringProp>
              <stringProp name="2010396143">&lt;n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;</stringProp>
              <stringProp name="908912442">&lt;n52:focalMechanism.nodalPlanes.preferredPlane&gt;nodalPlane1&lt;/n52:focalMechanism.nodalPlanes.preferredPlane&gt;</stringProp>
              <stringProp name="-1328031321">&lt;n52:preferredOriginID&gt;</stringProp>
              <stringProp name="734188073">&lt;n52:preferredMagnitudeID&gt;</stringProp>
              <stringProp name="1520905033">&lt;n52:the_geom&gt;</stringProp>
              <stringProp name="548720376">&lt;gml:MultiPoint srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quakeledger with QuakeML output (reference)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0        http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;mmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;6.6&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;mmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;8.5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;140&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;p&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;0.1&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;etype&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;deaggregation&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlon&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-71.5730623712764&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlat&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-33.1299174879672&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;input-boundingbox&quot;&gt;&#xd;
        &lt;wps:Data&gt;&#xd;
            &lt;ows:BoundingBox crs=&quot;EPSG:4326&quot; dimensions=&quot;2&quot;&gt;&#xd;
                &lt;ows:LowerCorner&gt;-33.56886118255556 -72.1142578125&lt;/ows:LowerCorner&gt;&#xd;
                &lt;ows:UpperCorner&gt;-32.6671247331203 -70.938720703125&lt;/ows:UpperCorner&gt;&#xd;
            &lt;/ows:BoundingBox&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRows&quot; transmission=&quot;reference&quot; mimeType=&quot;text/xml&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-35725261">&lt;wps:Output id=&quot;selectedRows&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-1471615569">&lt;wps:Reference</stringProp>
              <stringProp name="-1221343490">schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot;</stringProp>
              <stringProp name="1840897800">encoding=&quot;UTF-8&quot;</stringProp>
              <stringProp name="-733823398">mimeType=&quot;text/xml&quot;</stringProp>
              <stringProp name="18458481">xlin:href=&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quakeledger with GeoJSON output (reference)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0        http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;mmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;6.6&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;mmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;8.5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;140&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;p&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;0.1&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;etype&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;deaggregation&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlon&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-71.5730623712764&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlat&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-33.1299174879672&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;input-boundingbox&quot;&gt;&#xd;
        &lt;wps:Data&gt;&#xd;
            &lt;ows:BoundingBox crs=&quot;EPSG:4326&quot; dimensions=&quot;2&quot;&gt;&#xd;
                &lt;ows:LowerCorner&gt;-33.56886118255556 -72.1142578125&lt;/ows:LowerCorner&gt;&#xd;
                &lt;ows:UpperCorner&gt;-32.6671247331203 -70.938720703125&lt;/ows:UpperCorner&gt;&#xd;
            &lt;/ows:BoundingBox&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRows&quot; transmission=&quot;reference&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-35725261">&lt;wps:Output id=&quot;selectedRows&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-1471615569">&lt;wps:Reference</stringProp>
              <stringProp name="1840897800">encoding=&quot;UTF-8&quot;</stringProp>
              <stringProp name="-911219188">mimeType=&quot;application/vnd.geo+json&quot;</stringProp>
              <stringProp name="18458481">xlin:href=&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quakeledger with GML output (reference)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0        http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeledgerProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;mmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;6.6&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;mmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;8.5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;5&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;zmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;140&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;p&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;0.1&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;etype&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;deaggregation&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlon&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-71.5730623712764&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;tlat&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-33.1299174879672&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;input-boundingbox&quot;&gt;&#xd;
        &lt;wps:Data&gt;&#xd;
            &lt;ows:BoundingBox crs=&quot;EPSG:4326&quot; dimensions=&quot;2&quot;&gt;&#xd;
                &lt;ows:LowerCorner&gt;-33.56886118255556 -72.1142578125&lt;/ows:LowerCorner&gt;&#xd;
                &lt;ows:UpperCorner&gt;-32.6671247331203 -70.938720703125&lt;/ows:UpperCorner&gt;&#xd;
            &lt;/ows:BoundingBox&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRows&quot; transmission=&quot;reference&quot; mimeType=&quot;text/xml&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-35725261">&lt;wps:Output id=&quot;selectedRows&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-1471615569">&lt;wps:Reference</stringProp>
              <stringProp name="1840897800">encoding=&quot;UTF-8&quot;</stringProp>
              <stringProp name="-1086326384">schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;</stringProp>
              <stringProp name="18458481">xlin:href=&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="AssetmasterProcess" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Assetmaster with NRML + JSON output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0        http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.AssetmasterProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;lonmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-71.8&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;lonmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-71.4&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;latmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-33.2&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;latmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-33.0&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;schema&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;SARA_v1.0&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;assettype&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;res&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;querymode&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;intersects&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRowsXml&quot; transmission=&quot;value&quot; schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRowsGeoJson&quot; transmission=&quot;value&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1529634306">&lt;wps:Data schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;</stringProp>
              <stringProp name="912014172">&lt;wps:Output id=&quot;selectedRowsXml&quot;&gt;</stringProp>
              <stringProp name="864558672">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/json&quot;&gt;{&quot;features&quot;:[{&quot;geometry&quot;:{&quot;coordinates&quot;:[[[[</stringProp>
              <stringProp name="-1151998434">&lt;wps:Output id=&quot;selectedRowsGeoJson&quot;&gt;</stringProp>
              <stringProp name="-1079911648">&quot;type&quot;:&quot;Feature&quot;,&quot;properties&quot;:{</stringProp>
              <stringProp name="-945402052">&quot;crs&quot;:{&quot;type&quot;:&quot;name&quot;,&quot;properties&quot;:{&quot;name&quot;:&quot;urn:ogc:def:crs:OGC:1.3:CRS84&quot;}},&quot;type&quot;:&quot;FeatureCollection&quot;}</stringProp>
              <stringProp name="58801311">&lt;nrml</stringProp>
              <stringProp name="684322147">&lt;exposureModel id=&quot;SARA_v1.0&quot; category=&quot;buildings&quot; taxonomySource=&quot;GEM&quot;&gt;</stringProp>
              <stringProp name="1949336062">&lt;description&gt;</stringProp>
              <stringProp name="323087357">&lt;conversions&gt;</stringProp>
              <stringProp name="784630111">&lt;assets&gt;</stringProp>
              <stringProp name="1628338764">&lt;asset id=&quot;</stringProp>
              <stringProp name="1274305071">&lt;occupancies&gt;</stringProp>
              <stringProp name="355983860">&lt;costs&gt;</stringProp>
              <stringProp name="-1412283615">&lt;location lon=&quot;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="847901181">&quot;name&quot;:&quot;</stringProp>
              <stringProp name="-908696175">xmlns:gml=&quot;http://www.opengis.net/gml&quot;</stringProp>
              <stringProp name="-1073580409">xmlns=&quot;http://openquake.org/xmlns/nrml/0.5&quot;</stringProp>
              <stringProp name="2111841679">&quot;expo&quot;:{</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Assetmaster with GeoJSON + JSON output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0        http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.AssetmasterProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;lonmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-71.8&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;lonmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-71.4&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;latmin&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-33.2&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;latmax&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;-33.0&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;schema&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;SARA_v1.0&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;assettype&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;res&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;querymode&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;intersects&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRowsXml&quot; transmission=&quot;value&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRowsGeoJson&quot; transmission=&quot;value&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="912014172">&lt;wps:Output id=&quot;selectedRowsXml&quot;&gt;</stringProp>
              <stringProp name="864558672">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/json&quot;&gt;{&quot;features&quot;:[{&quot;geometry&quot;:{&quot;coordinates&quot;:[[[[</stringProp>
              <stringProp name="-1151998434">&lt;wps:Output id=&quot;selectedRowsGeoJson&quot;&gt;</stringProp>
              <stringProp name="-1079911648">&quot;type&quot;:&quot;Feature&quot;,&quot;properties&quot;:{</stringProp>
              <stringProp name="-945402052">&quot;crs&quot;:{&quot;type&quot;:&quot;name&quot;,&quot;properties&quot;:{&quot;name&quot;:&quot;urn:ogc:def:crs:OGC:1.3:CRS84&quot;}},&quot;type&quot;:&quot;FeatureCollection&quot;}</stringProp>
              <stringProp name="1977390381">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;Point&quot;,&quot;coordinates&quot;:[</stringProp>
              <stringProp name="374488183">&quot;taxonomy&quot;:&quot;</stringProp>
              <stringProp name="-1054580528">&quot;properties&quot;:{&quot;exposureModelId&quot;:&quot;SARA_v1.0&quot;,&quot;exposureModelCategory&quot;:&quot;buildings&quot;,&quot;exposureModelTaxonomySource&quot;:&quot;GEM&quot;,&quot;description&quot;:&quot;</stringProp>
              <stringProp name="1342733926">&quot;occupanciesInday&quot;:</stringProp>
              <stringProp name="1064397507">&quot;costTypeName&quot;:&quot;structural&quot;,&quot;costTypeType&quot;:&quot;per_asset&quot;,&quot;costTypeUnit&quot;:&quot;USD&quot;,&quot;occupanciesInnight&quot;:</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="847901181">&quot;name&quot;:&quot;</stringProp>
              <stringProp name="2111841679">&quot;expo&quot;:{</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ShakygroundProcess" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shakyground with Shakemap output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot;&#xd;
	response=&quot;document&quot;&#xd;
	mode=&quot;sync&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;&#xd;
&lt;wps:Input id=&quot;quakeMLFile&quot;&gt;&#xd;
&lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&#xd;
&lt;eventParameters publicID=&quot;quakeml:quakeledger/0&quot; xmlns=&quot;http://quakeml.org/xmlns/bed/1.2&quot;&gt;&#xd;
  &lt;event publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
    &lt;preferredOriginID&gt;quakeml:quakeledger/84945&lt;/preferredOriginID&gt;&#xd;
    &lt;preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/preferredMagnitudeID&gt;&#xd;
    &lt;type&gt;earthquake&lt;/type&gt;&#xd;
    &lt;description&gt;&#xd;
      &lt;text&gt;stochastic&lt;/text&gt;&#xd;
    &lt;/description&gt;&#xd;
    &lt;origin publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;time&gt;&#xd;
        &lt;value&gt;2019-01-01T00:00:00.000000Z&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/time&gt;&#xd;
      &lt;latitude&gt;&#xd;
        &lt;value&gt;-30.9227&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/latitude&gt;&#xd;
      &lt;longitude&gt;&#xd;
        &lt;value&gt;-71.49875&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/longitude&gt;&#xd;
      &lt;depth&gt;&#xd;
        &lt;value&gt;34.75117&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/depth&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
      &lt;originUncertainty&gt;&#xd;
        &lt;horizontalUncertainty&gt;NaN&lt;/horizontalUncertainty&gt;&#xd;
        &lt;minHorizontalUncertainty&gt;NaN&lt;/minHorizontalUncertainty&gt;&#xd;
        &lt;maxHorizontalUncertainty&gt;NaN&lt;/maxHorizontalUncertainty&gt;&#xd;
        &lt;azimuthMaxHorizontalUncertainty&gt;NaN&lt;/azimuthMaxHorizontalUncertainty&gt;&#xd;
      &lt;/originUncertainty&gt;&#xd;
    &lt;/origin&gt;&#xd;
    &lt;magnitude publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;mag&gt;&#xd;
        &lt;value&gt;8.35&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/mag&gt;&#xd;
      &lt;type&gt;MW&lt;/type&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
    &lt;/magnitude&gt;&#xd;
    &lt;focalMechanism publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;nodalPlanes preferredPlane=&quot;1&quot;&gt;&#xd;
        &lt;nodalPlane1&gt;&#xd;
          &lt;strike&gt;&#xd;
            &lt;value&gt;7.310981&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/strike&gt;&#xd;
          &lt;dip&gt;&#xd;
            &lt;value&gt;16.352970000000003&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/dip&gt;&#xd;
          &lt;rake&gt;&#xd;
            &lt;value&gt;90.0&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/rake&gt;&#xd;
        &lt;/nodalPlane1&gt;&#xd;
      &lt;/nodalPlanes&gt;&#xd;
    &lt;/focalMechanism&gt;&#xd;
  &lt;/event&gt;&#xd;
&lt;/eventParameters&gt;&#xd;
&lt;/wps:Data&gt;&#xd;
&lt;/wps:Input&gt;&#xd;
&lt;wps:Output id=&quot;shakeMapFile&quot; transmission=&quot;value&quot; schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="767787856">&lt;wps:Data schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;</stringProp>
              <stringProp name="179973297">&lt;wps:Output id=&quot;shakeMapFile&quot;&gt;</stringProp>
              <stringProp name="-2039662432">&lt;shakemap_grid xmlns=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot;</stringProp>
              <stringProp name="-200846074">&lt;grid_specification</stringProp>
              <stringProp name="-1929777566">&lt;event_specific_uncertainty</stringProp>
              <stringProp name="-607592229">&lt;grid_field index=&quot;1&quot; name=&quot;LON&quot; units=&quot;dd&quot;/&gt;</stringProp>
              <stringProp name="-1563652274">&lt;grid_field index=&quot;2&quot; name=&quot;LAT&quot; units=&quot;dd&quot;/&gt;</stringProp>
              <stringProp name="-620494557">&lt;grid_field index=&quot;3&quot; name=&quot;PGA&quot; units=&quot;g&quot;/&gt;</stringProp>
              <stringProp name="-288287413">&lt;grid_field index=&quot;4&quot; name=&quot;STDPGA&quot; units=&quot;g&quot;/&gt;</stringProp>
              <stringProp name="582339799">&lt;grid_data&gt;</stringProp>
              <stringProp name="1814640606">&lt;event</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="2119520441">code_version=&quot;shakyground 0.1&quot;</stringProp>
              <stringProp name="-1948737220">event_id=&quot;quakeml:quakeledger/84945&quot;</stringProp>
              <stringProp name="-209153717">map_status=&quot;RELEASED&quot;</stringProp>
              <stringProp name="-131100341">process_timestamp=&quot;</stringProp>
              <stringProp name="-1432414247">lat_max=&quot;-28.5416666667&quot;</stringProp>
              <stringProp name="-809963001">lat_min=&quot;-33.3&quot;</stringProp>
              <stringProp name="-1714381709">lon_max=&quot;-69.4583333333&quot;</stringProp>
              <stringProp name="312025621">lon_min=&quot;-73.5416666667&quot;</stringProp>
              <stringProp name="1126298376">nlat=&quot;572&quot;</stringProp>
              <stringProp name="-1274243400">nlon=&quot;491&quot;</stringProp>
              <stringProp name="1950760580">nominal_lat_spacing=&quot;0.008333&quot;</stringProp>
              <stringProp name="-1227315880">nominal_lon_spacing=&quot;0.008333&quot;</stringProp>
              <stringProp name="1396742623">regular_grid=&quot;1&quot;</stringProp>
              <stringProp name="-1453499544">name=&quot;pga&quot;</stringProp>
              <stringProp name="-2145032669">numsta=&quot;&quot;</stringProp>
              <stringProp name="-2132198874">value=&quot;0.0&quot;</stringProp>
              <stringProp name="-1453498893">name=&quot;pgv&quot;</stringProp>
              <stringProp name="1200036022">name=&quot;mi&quot;</stringProp>
              <stringProp name="-937593263">name=&quot;psa03&quot;</stringProp>
              <stringProp name="-937592395">name=&quot;psa10&quot;</stringProp>
              <stringProp name="-937590473">name=&quot;psa30&quot;</stringProp>
              <stringProp name="116906094">depth=&quot;34.75117&quot;</stringProp>
              <stringProp name="253642758">event_description=&quot;&quot;</stringProp>
              <stringProp name="-1948737220">event_id=&quot;quakeml:quakeledger/84945&quot;</stringProp>
              <stringProp name="-1520343499">event_network=&quot;nan&quot;</stringProp>
              <stringProp name="-699622978">event_timestamp=&quot;2019-01-01T00:00:00.000000Z&quot;</stringProp>
              <stringProp name="280840252">lat=&quot;-30.9227&quot;</stringProp>
              <stringProp name="2060103144">lon=&quot;-71.49875&quot;</stringProp>
              <stringProp name="2004087509">magnitude=&quot;8.35&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shakyground with GeoJSON output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot;&#xd;
	response=&quot;document&quot;&#xd;
	mode=&quot;sync&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;&#xd;
&lt;wps:Input id=&quot;quakeMLFile&quot;&gt;&#xd;
&lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&#xd;
&lt;eventParameters publicID=&quot;quakeml:quakeledger/0&quot; xmlns=&quot;http://quakeml.org/xmlns/bed/1.2&quot;&gt;&#xd;
  &lt;event publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
    &lt;preferredOriginID&gt;quakeml:quakeledger/84945&lt;/preferredOriginID&gt;&#xd;
    &lt;preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/preferredMagnitudeID&gt;&#xd;
    &lt;type&gt;earthquake&lt;/type&gt;&#xd;
    &lt;description&gt;&#xd;
      &lt;text&gt;stochastic&lt;/text&gt;&#xd;
    &lt;/description&gt;&#xd;
    &lt;origin publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;time&gt;&#xd;
        &lt;value&gt;2019-01-01T00:00:00.000000Z&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/time&gt;&#xd;
      &lt;latitude&gt;&#xd;
        &lt;value&gt;-30.9227&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/latitude&gt;&#xd;
      &lt;longitude&gt;&#xd;
        &lt;value&gt;-71.49875&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/longitude&gt;&#xd;
      &lt;depth&gt;&#xd;
        &lt;value&gt;34.75117&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/depth&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
      &lt;originUncertainty&gt;&#xd;
        &lt;horizontalUncertainty&gt;NaN&lt;/horizontalUncertainty&gt;&#xd;
        &lt;minHorizontalUncertainty&gt;NaN&lt;/minHorizontalUncertainty&gt;&#xd;
        &lt;maxHorizontalUncertainty&gt;NaN&lt;/maxHorizontalUncertainty&gt;&#xd;
        &lt;azimuthMaxHorizontalUncertainty&gt;NaN&lt;/azimuthMaxHorizontalUncertainty&gt;&#xd;
      &lt;/originUncertainty&gt;&#xd;
    &lt;/origin&gt;&#xd;
    &lt;magnitude publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;mag&gt;&#xd;
        &lt;value&gt;8.35&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/mag&gt;&#xd;
      &lt;type&gt;MW&lt;/type&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
    &lt;/magnitude&gt;&#xd;
    &lt;focalMechanism publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;nodalPlanes preferredPlane=&quot;1&quot;&gt;&#xd;
        &lt;nodalPlane1&gt;&#xd;
          &lt;strike&gt;&#xd;
            &lt;value&gt;7.310981&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/strike&gt;&#xd;
          &lt;dip&gt;&#xd;
            &lt;value&gt;16.352970000000003&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/dip&gt;&#xd;
          &lt;rake&gt;&#xd;
            &lt;value&gt;90.0&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/rake&gt;&#xd;
        &lt;/nodalPlane1&gt;&#xd;
      &lt;/nodalPlanes&gt;&#xd;
    &lt;/focalMechanism&gt;&#xd;
  &lt;/event&gt;&#xd;
&lt;/eventParameters&gt;&#xd;
&lt;/wps:Data&gt;&#xd;
&lt;/wps:Input&gt;&#xd;
&lt;wps:Output id=&quot;shakeMapFile&quot; transmission=&quot;value&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-129447952">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;</stringProp>
              <stringProp name="179973297">&lt;wps:Output id=&quot;shakeMapFile&quot;&gt;</stringProp>
              <stringProp name="-314080051">{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;LineString&quot;,&quot;coordinates&quot;:[[</stringProp>
              <stringProp name="417969493">&quot;properties&quot;:{&quot;value&quot;:</stringProp>
              <stringProp name="-1832309772">{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;LineString&quot;,&quot;coordinates&quot;:[[</stringProp>
              <stringProp name="1073374445">&quot;id&quot;:&quot;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shakyground with GeoTIFF output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot;&#xd;
	response=&quot;document&quot;&#xd;
	mode=&quot;sync&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;&#xd;
&lt;wps:Input id=&quot;quakeMLFile&quot;&gt;&#xd;
&lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&#xd;
&lt;eventParameters publicID=&quot;quakeml:quakeledger/0&quot; xmlns=&quot;http://quakeml.org/xmlns/bed/1.2&quot;&gt;&#xd;
  &lt;event publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
    &lt;preferredOriginID&gt;quakeml:quakeledger/84945&lt;/preferredOriginID&gt;&#xd;
    &lt;preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/preferredMagnitudeID&gt;&#xd;
    &lt;type&gt;earthquake&lt;/type&gt;&#xd;
    &lt;description&gt;&#xd;
      &lt;text&gt;stochastic&lt;/text&gt;&#xd;
    &lt;/description&gt;&#xd;
    &lt;origin publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;time&gt;&#xd;
        &lt;value&gt;2019-01-01T00:00:00.000000Z&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/time&gt;&#xd;
      &lt;latitude&gt;&#xd;
        &lt;value&gt;-30.9227&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/latitude&gt;&#xd;
      &lt;longitude&gt;&#xd;
        &lt;value&gt;-71.49875&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/longitude&gt;&#xd;
      &lt;depth&gt;&#xd;
        &lt;value&gt;34.75117&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/depth&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
      &lt;originUncertainty&gt;&#xd;
        &lt;horizontalUncertainty&gt;NaN&lt;/horizontalUncertainty&gt;&#xd;
        &lt;minHorizontalUncertainty&gt;NaN&lt;/minHorizontalUncertainty&gt;&#xd;
        &lt;maxHorizontalUncertainty&gt;NaN&lt;/maxHorizontalUncertainty&gt;&#xd;
        &lt;azimuthMaxHorizontalUncertainty&gt;NaN&lt;/azimuthMaxHorizontalUncertainty&gt;&#xd;
      &lt;/originUncertainty&gt;&#xd;
    &lt;/origin&gt;&#xd;
    &lt;magnitude publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;mag&gt;&#xd;
        &lt;value&gt;8.35&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/mag&gt;&#xd;
      &lt;type&gt;MW&lt;/type&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
    &lt;/magnitude&gt;&#xd;
    &lt;focalMechanism publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;nodalPlanes preferredPlane=&quot;1&quot;&gt;&#xd;
        &lt;nodalPlane1&gt;&#xd;
          &lt;strike&gt;&#xd;
            &lt;value&gt;7.310981&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/strike&gt;&#xd;
          &lt;dip&gt;&#xd;
            &lt;value&gt;16.352970000000003&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/dip&gt;&#xd;
          &lt;rake&gt;&#xd;
            &lt;value&gt;90.0&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/rake&gt;&#xd;
        &lt;/nodalPlane1&gt;&#xd;
      &lt;/nodalPlanes&gt;&#xd;
    &lt;/focalMechanism&gt;&#xd;
  &lt;/event&gt;&#xd;
&lt;/eventParameters&gt;&#xd;
&lt;/wps:Data&gt;&#xd;
&lt;/wps:Input&gt;&#xd;
&lt;wps:Output id=&quot;shakeMapFile&quot; transmission=&quot;value&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1391814457">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;image/geotiff&quot;&gt;&lt;![CDATA[</stringProp>
              <stringProp name="179973297">&lt;wps:Output id=&quot;shakeMapFile&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shakyground with GeoTIFF output (Base64)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot;&#xd;
	response=&quot;document&quot;&#xd;
	mode=&quot;sync&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;&#xd;
&lt;wps:Input id=&quot;quakeMLFile&quot;&gt;&#xd;
&lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&#xd;
&lt;eventParameters publicID=&quot;quakeml:quakeledger/0&quot; xmlns=&quot;http://quakeml.org/xmlns/bed/1.2&quot;&gt;&#xd;
  &lt;event publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
    &lt;preferredOriginID&gt;quakeml:quakeledger/84945&lt;/preferredOriginID&gt;&#xd;
    &lt;preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/preferredMagnitudeID&gt;&#xd;
    &lt;type&gt;earthquake&lt;/type&gt;&#xd;
    &lt;description&gt;&#xd;
      &lt;text&gt;stochastic&lt;/text&gt;&#xd;
    &lt;/description&gt;&#xd;
    &lt;origin publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;time&gt;&#xd;
        &lt;value&gt;2019-01-01T00:00:00.000000Z&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/time&gt;&#xd;
      &lt;latitude&gt;&#xd;
        &lt;value&gt;-30.9227&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/latitude&gt;&#xd;
      &lt;longitude&gt;&#xd;
        &lt;value&gt;-71.49875&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/longitude&gt;&#xd;
      &lt;depth&gt;&#xd;
        &lt;value&gt;34.75117&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/depth&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
      &lt;originUncertainty&gt;&#xd;
        &lt;horizontalUncertainty&gt;NaN&lt;/horizontalUncertainty&gt;&#xd;
        &lt;minHorizontalUncertainty&gt;NaN&lt;/minHorizontalUncertainty&gt;&#xd;
        &lt;maxHorizontalUncertainty&gt;NaN&lt;/maxHorizontalUncertainty&gt;&#xd;
        &lt;azimuthMaxHorizontalUncertainty&gt;NaN&lt;/azimuthMaxHorizontalUncertainty&gt;&#xd;
      &lt;/originUncertainty&gt;&#xd;
    &lt;/origin&gt;&#xd;
    &lt;magnitude publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;mag&gt;&#xd;
        &lt;value&gt;8.35&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/mag&gt;&#xd;
      &lt;type&gt;MW&lt;/type&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
    &lt;/magnitude&gt;&#xd;
    &lt;focalMechanism publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;nodalPlanes preferredPlane=&quot;1&quot;&gt;&#xd;
        &lt;nodalPlane1&gt;&#xd;
          &lt;strike&gt;&#xd;
            &lt;value&gt;7.310981&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/strike&gt;&#xd;
          &lt;dip&gt;&#xd;
            &lt;value&gt;16.352970000000003&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/dip&gt;&#xd;
          &lt;rake&gt;&#xd;
            &lt;value&gt;90.0&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/rake&gt;&#xd;
        &lt;/nodalPlane1&gt;&#xd;
      &lt;/nodalPlanes&gt;&#xd;
    &lt;/focalMechanism&gt;&#xd;
  &lt;/event&gt;&#xd;
&lt;/eventParameters&gt;&#xd;
&lt;/wps:Data&gt;&#xd;
&lt;/wps:Input&gt;&#xd;
&lt;wps:Output id=&quot;shakeMapFile&quot; transmission=&quot;value&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1446657372">&lt;wps:Data encoding=&quot;base64&quot; mimeType=&quot;image/geotiff&quot;&gt;</stringProp>
              <stringProp name="179973297">&lt;wps:Output id=&quot;shakeMapFile&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-1540314476">TU0AKgAAAAgAEAEAAAMAAAABAesAAAEBAAMAAAABAjwAAAECAAMAAAACAEAAQAEDAAMAAAABAAUA</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shakyground with WMS output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot;&#xd;
	response=&quot;document&quot;&#xd;
	mode=&quot;sync&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;&#xd;
&lt;wps:Input id=&quot;quakeMLFile&quot;&gt;&#xd;
&lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&#xd;
&lt;eventParameters publicID=&quot;quakeml:quakeledger/0&quot; xmlns=&quot;http://quakeml.org/xmlns/bed/1.2&quot;&gt;&#xd;
  &lt;event publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
    &lt;preferredOriginID&gt;quakeml:quakeledger/84945&lt;/preferredOriginID&gt;&#xd;
    &lt;preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/preferredMagnitudeID&gt;&#xd;
    &lt;type&gt;earthquake&lt;/type&gt;&#xd;
    &lt;description&gt;&#xd;
      &lt;text&gt;stochastic&lt;/text&gt;&#xd;
    &lt;/description&gt;&#xd;
    &lt;origin publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;time&gt;&#xd;
        &lt;value&gt;2019-01-01T00:00:00.000000Z&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/time&gt;&#xd;
      &lt;latitude&gt;&#xd;
        &lt;value&gt;-30.9227&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/latitude&gt;&#xd;
      &lt;longitude&gt;&#xd;
        &lt;value&gt;-71.49875&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/longitude&gt;&#xd;
      &lt;depth&gt;&#xd;
        &lt;value&gt;34.75117&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/depth&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
      &lt;originUncertainty&gt;&#xd;
        &lt;horizontalUncertainty&gt;NaN&lt;/horizontalUncertainty&gt;&#xd;
        &lt;minHorizontalUncertainty&gt;NaN&lt;/minHorizontalUncertainty&gt;&#xd;
        &lt;maxHorizontalUncertainty&gt;NaN&lt;/maxHorizontalUncertainty&gt;&#xd;
        &lt;azimuthMaxHorizontalUncertainty&gt;NaN&lt;/azimuthMaxHorizontalUncertainty&gt;&#xd;
      &lt;/originUncertainty&gt;&#xd;
    &lt;/origin&gt;&#xd;
    &lt;magnitude publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;mag&gt;&#xd;
        &lt;value&gt;8.35&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/mag&gt;&#xd;
      &lt;type&gt;MW&lt;/type&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
    &lt;/magnitude&gt;&#xd;
    &lt;focalMechanism publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;nodalPlanes preferredPlane=&quot;1&quot;&gt;&#xd;
        &lt;nodalPlane1&gt;&#xd;
          &lt;strike&gt;&#xd;
            &lt;value&gt;7.310981&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/strike&gt;&#xd;
          &lt;dip&gt;&#xd;
            &lt;value&gt;16.352970000000003&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/dip&gt;&#xd;
          &lt;rake&gt;&#xd;
            &lt;value&gt;90.0&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/rake&gt;&#xd;
        &lt;/nodalPlane1&gt;&#xd;
      &lt;/nodalPlanes&gt;&#xd;
    &lt;/focalMechanism&gt;&#xd;
  &lt;/event&gt;&#xd;
&lt;/eventParameters&gt;&#xd;
&lt;/wps:Data&gt;&#xd;
&lt;/wps:Input&gt;&#xd;
&lt;wps:Output id=&quot;shakeMapFile&quot; transmission=&quot;value&quot; mimeType=&quot;application/WMS&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="113455863">&lt;wps:Data mimeType=&quot;application/WMS&quot;&gt;&lt;![CDATA[</stringProp>
              <stringProp name="179973297">&lt;wps:Output id=&quot;shakeMapFile&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="538597085">geoserver/wms?</stringProp>
              <stringProp name="-261220619">Service=WMS</stringProp>
              <stringProp name="204802932">Request=GetMap</stringProp>
              <stringProp name="879824658">Version=1.1.1</stringProp>
              <stringProp name="2061578968">layers=N52:primary</stringProp>
              <stringProp name="1485219">.tif</stringProp>
              <stringProp name="-788034761">width=</stringProp>
              <stringProp name="802788342">height=</stringProp>
              <stringProp name="1540830991">format=image/png</stringProp>
              <stringProp name="93535028">bbox=</stringProp>
              <stringProp name="-1172649803">srs=EPSG:4326</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shakyground with GML output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot;&#xd;
	response=&quot;document&quot;&#xd;
	mode=&quot;sync&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;&#xd;
&lt;wps:Input id=&quot;quakeMLFile&quot;&gt;&#xd;
&lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&#xd;
&lt;eventParameters publicID=&quot;quakeml:quakeledger/0&quot; xmlns=&quot;http://quakeml.org/xmlns/bed/1.2&quot;&gt;&#xd;
  &lt;event publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
    &lt;preferredOriginID&gt;quakeml:quakeledger/84945&lt;/preferredOriginID&gt;&#xd;
    &lt;preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/preferredMagnitudeID&gt;&#xd;
    &lt;type&gt;earthquake&lt;/type&gt;&#xd;
    &lt;description&gt;&#xd;
      &lt;text&gt;stochastic&lt;/text&gt;&#xd;
    &lt;/description&gt;&#xd;
    &lt;origin publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;time&gt;&#xd;
        &lt;value&gt;2019-01-01T00:00:00.000000Z&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/time&gt;&#xd;
      &lt;latitude&gt;&#xd;
        &lt;value&gt;-30.9227&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/latitude&gt;&#xd;
      &lt;longitude&gt;&#xd;
        &lt;value&gt;-71.49875&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/longitude&gt;&#xd;
      &lt;depth&gt;&#xd;
        &lt;value&gt;34.75117&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/depth&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
      &lt;originUncertainty&gt;&#xd;
        &lt;horizontalUncertainty&gt;NaN&lt;/horizontalUncertainty&gt;&#xd;
        &lt;minHorizontalUncertainty&gt;NaN&lt;/minHorizontalUncertainty&gt;&#xd;
        &lt;maxHorizontalUncertainty&gt;NaN&lt;/maxHorizontalUncertainty&gt;&#xd;
        &lt;azimuthMaxHorizontalUncertainty&gt;NaN&lt;/azimuthMaxHorizontalUncertainty&gt;&#xd;
      &lt;/originUncertainty&gt;&#xd;
    &lt;/origin&gt;&#xd;
    &lt;magnitude publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;mag&gt;&#xd;
        &lt;value&gt;8.35&lt;/value&gt;&#xd;
        &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
      &lt;/mag&gt;&#xd;
      &lt;type&gt;MW&lt;/type&gt;&#xd;
      &lt;creationInfo&gt;&#xd;
        &lt;author&gt;GFZ&lt;/author&gt;&#xd;
      &lt;/creationInfo&gt;&#xd;
    &lt;/magnitude&gt;&#xd;
    &lt;focalMechanism publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
      &lt;nodalPlanes preferredPlane=&quot;1&quot;&gt;&#xd;
        &lt;nodalPlane1&gt;&#xd;
          &lt;strike&gt;&#xd;
            &lt;value&gt;7.310981&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/strike&gt;&#xd;
          &lt;dip&gt;&#xd;
            &lt;value&gt;16.352970000000003&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/dip&gt;&#xd;
          &lt;rake&gt;&#xd;
            &lt;value&gt;90.0&lt;/value&gt;&#xd;
            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
          &lt;/rake&gt;&#xd;
        &lt;/nodalPlane1&gt;&#xd;
      &lt;/nodalPlanes&gt;&#xd;
    &lt;/focalMechanism&gt;&#xd;
  &lt;/event&gt;&#xd;
&lt;/eventParameters&gt;&#xd;
&lt;/wps:Data&gt;&#xd;
&lt;/wps:Input&gt;&#xd;
&lt;wps:Output id=&quot;shakeMapFile&quot; transmission=&quot;value&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-516217402">&lt;wps:Data schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;</stringProp>
              <stringProp name="179973297">&lt;wps:Output id=&quot;shakeMapFile&quot;&gt;</stringProp>
              <stringProp name="-1429770921">&lt;gml:FeatureCollection xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot; xmlns:n52=&quot;</stringProp>
              <stringProp name="-708924821">&lt;gml:featureMembers&gt;</stringProp>
              <stringProp name="1220812130">&lt;n52:Feature-</stringProp>
              <stringProp name="604893337">&lt;gml:MultiCurve srsDimension=&quot;2&quot; srsName=&quot;http://www.opengis.net/gml/srs/epsg.xml#4326&quot;&gt;</stringProp>
              <stringProp name="1520905033">&lt;n52:the_geom&gt;</stringProp>
              <stringProp name="-1537390344">&lt;n52:value&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shakyground with GeoJSON input" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot;&#xd;
	response=&quot;document&quot;&#xd;
	mode=&quot;sync&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;&#xd;
	&lt;wps:Input id=&quot;quakeMLFile&quot;&gt;&#xd;
	&lt;wps:Data mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&#xd;
{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;Point&quot;,&quot;coordinates&quot;:[-71.4987,-30.9227]},&quot;properties&quot;:{&quot;preferredOriginID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;preferredMagnitudeID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;type&quot;:&quot;earthquake&quot;,&quot;description.text&quot;:&quot;stochastic&quot;,&quot;origin.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;origin.time.value&quot;:&quot;2019-01-01T00:00:00.000000Z&quot;,&quot;origin.depth.value&quot;:&quot;34.75117&quot;,&quot;origin.creationInfo.value&quot;:&quot;GFZ&quot;,&quot;magnitude.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;magnitude.mag.value&quot;:&quot;8.35&quot;,&quot;magnitude.type&quot;:&quot;MW&quot;,&quot;magnitude.creationInfo.value&quot;:&quot;GFZ&quot;,&quot;focalMechanism.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.strike.value&quot;:&quot;7.310981&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.dip.value&quot;:&quot;16.352970000000003&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.rake.value&quot;:&quot;90.0&quot;,&quot;focalMechanism.nodalPlanes.preferredPlane&quot;:&quot;nodalPlane1&quot;},&quot;id&quot;:&quot;quakeml:quakeledger\/84945&quot;}]}&#xd;
	&lt;/wps:Data&gt;&#xd;
	&lt;/wps:Input&gt;&#xd;
	&lt;wps:Output id=&quot;shakeMapFile&quot; transmission=&quot;value&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-129447952">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;</stringProp>
              <stringProp name="179973297">&lt;wps:Output id=&quot;shakeMapFile&quot;&gt;</stringProp>
              <stringProp name="-314080051">{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;LineString&quot;,&quot;coordinates&quot;:[[</stringProp>
              <stringProp name="417969493">&quot;properties&quot;:{&quot;value&quot;:</stringProp>
              <stringProp name="-1832309772">{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;LineString&quot;,&quot;coordinates&quot;:[[</stringProp>
              <stringProp name="1073374445">&quot;id&quot;:&quot;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Shakyground with GML input" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute&#xd;
	service=&quot;WPS&quot;&#xd;
	version=&quot;2.0.0&quot;&#xd;
	xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot;&#xd;
	xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot;&#xd;
	xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
	xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0 http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot;&#xd;
	response=&quot;document&quot;&#xd;
	mode=&quot;sync&quot;&gt;&#xd;
	&lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakygroundProcess&lt;/ows:Identifier&gt;&#xd;
	&lt;wps:Input id=&quot;quakeMLFile&quot;&gt;&#xd;
     &lt;wps:Data schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;&#xd;
      &lt;gml:FeatureCollection xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot; xmlns:n52=&quot;http://www.52north.org/2957590d-6aad-4398-8bc3-9099594483bb&quot; xsi:schemaLocation=&quot;http://www.opengis.net/gml http://schemas.opengis.net/gml/3.1.1/base/feature.xsd http://www.52north.org/2957590d-6aad-4398-8bc3-9099594483bb https://raw.githubusercontent.com/riesgos/gfz-command-line-tool-repository/master/integration-tests/wps_static_schemas_quakeml_gml.xsd&quot;&gt;&#xd;
        &lt;gml:featureMembers&gt;&#xd;
          &lt;n52:Feature-2957590d-6aad-4398-8bc3-9099594483bb gml:id=&quot;ID0&quot;&gt;&#xd;
            &lt;gml:boundedBy&gt;&#xd;
              &lt;gml:Envelope srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;&#xd;
                &lt;gml:lowerCorner&gt;-71.4987 -30.9227&lt;/gml:lowerCorner&gt;&#xd;
                &lt;gml:upperCorner&gt;-71.4987 -30.9227&lt;/gml:upperCorner&gt;&#xd;
              &lt;/gml:Envelope&gt;&#xd;
            &lt;/gml:boundedBy&gt;&#xd;
            &lt;n52:the_geom&gt;&#xd;
              &lt;gml:MultiPoint srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;&#xd;
                &lt;gml:pointMember&gt;&#xd;
                  &lt;gml:Point srsDimension=&quot;2&quot;&gt;&#xd;
                    &lt;gml:pos&gt;-71.4987 -30.9227&lt;/gml:pos&gt;&#xd;
                  &lt;/gml:Point&gt;&#xd;
                &lt;/gml:pointMember&gt;&#xd;
              &lt;/gml:MultiPoint&gt;&#xd;
            &lt;/n52:the_geom&gt;&#xd;
            &lt;n52:publicID&gt;quakeml:quakeledger/84945&lt;/n52:publicID&gt;&#xd;
            &lt;n52:preferredOriginID&gt;quakeml:quakeledger/84945&lt;/n52:preferredOriginID&gt;&#xd;
            &lt;n52:preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/n52:preferredMagnitudeID&gt;&#xd;
            &lt;n52:type&gt;earthquake&lt;/n52:type&gt;&#xd;
            &lt;n52:description.text&gt;stochastic&lt;/n52:description.text&gt;&#xd;
            &lt;n52:origin.publicID&gt;quakeml:quakeledger/84945&lt;/n52:origin.publicID&gt;&#xd;
            &lt;n52:origin.time.value&gt;2019-01-01T00:00:00.000000Z&lt;/n52:origin.time.value&gt;&#xd;
            &lt;n52:origin.depth.value&gt;34.75117&lt;/n52:origin.depth.value&gt;&#xd;
            &lt;n52:origin.creationInfo.value&gt;GFZ&lt;/n52:origin.creationInfo.value&gt;&#xd;
            &lt;n52:magnitude.publicID&gt;quakeml:quakeledger/84945&lt;/n52:magnitude.publicID&gt;&#xd;
            &lt;n52:magnitude.mag.value&gt;8.35&lt;/n52:magnitude.mag.value&gt;&#xd;
            &lt;n52:magnitude.type&gt;MW&lt;/n52:magnitude.type&gt;&#xd;
            &lt;n52:magnitude.creationInfo.value&gt;GFZ&lt;/n52:magnitude.creationInfo.value&gt;&#xd;
            &lt;n52:focalMechanism.publicID&gt;quakeml:quakeledger/84945&lt;/n52:focalMechanism.publicID&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;7.310981&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;16.352970000000003&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;90.0&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.preferredPlane&gt;nodalPlane1&lt;/n52:focalMechanism.nodalPlanes.preferredPlane&gt;&#xd;
          &lt;/n52:Feature-2957590d-6aad-4398-8bc3-9099594483bb&gt;&#xd;
        &lt;/gml:featureMembers&gt;&#xd;
      &lt;/gml:FeatureCollection&gt;&#xd;
	&lt;/wps:Data&gt;&#xd;
	&lt;/wps:Input&gt;&#xd;
	&lt;wps:Output id=&quot;shakeMapFile&quot; transmission=&quot;value&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-129447952">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;</stringProp>
              <stringProp name="179973297">&lt;wps:Output id=&quot;shakeMapFile&quot;&gt;</stringProp>
              <stringProp name="-314080051">{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;LineString&quot;,&quot;coordinates&quot;:[[</stringProp>
              <stringProp name="417969493">&quot;properties&quot;:{&quot;value&quot;:</stringProp>
              <stringProp name="-1832309772">{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;LineString&quot;,&quot;coordinates&quot;:[[</stringProp>
              <stringProp name="1073374445">&quot;id&quot;:&quot;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ModelpropProcess" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Modelprop with JSON output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ModelpropProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;schema&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;SARA_v1.0&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;assetcategory&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;buildings&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;losscategory&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;structural&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;taxonomies&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;MUR+ADO/H&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;selectedRows&quot; transmission=&quot;value&quot; mimeType=&quot;application/json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="721438277">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/json&quot;&gt;{&quot;data&quot;:[{&quot;</stringProp>
              <stringProp name="-35725261">&lt;wps:Output id=&quot;selectedRows&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-1399144166">&quot;D1_stddev&quot;:</stringProp>
              <stringProp name="389370125">&quot;D1_mean&quot;:</stringProp>
              <stringProp name="-1595657671">&quot;D2_stddev&quot;:</stringProp>
              <stringProp name="1322833834">&quot;D4_mean&quot;:</stringProp>
              <stringProp name="-2006613065">&quot;no_damage&quot;:&quot;D0&quot;</stringProp>
              <stringProp name="-1740710405">&quot;assetCategory&quot;:&quot;buildings&quot;,&quot;format&quot;:&quot;continuous&quot;,&quot;description&quot;:&quot;</stringProp>
              <stringProp name="-781258914">&quot;id&quot;:&quot;SARA_v1.0&quot;,&quot;damage_states&quot;:&quot;</stringProp>
              <stringProp name="978884219">&quot;limit_states&quot;:[&quot;D1&quot;,&quot;D2&quot;,&quot;D3&quot;,&quot;D4&quot;,&quot;D5&quot;],&quot;taxonomy_source&quot;:&quot;GEM&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="FlooddamageTiffDownloader" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TiffDownloader with GeoTIFF output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;base-url&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;https://www.sd-kama.de/geoserver/rain_cotopaxi/wcs&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;coverage-id&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;rain_cotopaxi:duration_latacunga_city&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output-tiff&quot; transmission=&quot;value&quot; mimeType=&quot;image/geotiff&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="265722170">&lt;wps:Output id=&quot;output-tiff&quot;&gt;</stringProp>
              <stringProp name="-1197329245">&lt;wps:Data mimeType=&quot;image/geotiff&quot;&gt;&lt;![CDATA[</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TiffDownloader with GeoTIFF output reference" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;base-url&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;https://www.sd-kama.de/geoserver/rain_cotopaxi/wcs&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;coverage-id&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;rain_cotopaxi:duration_latacunga_city&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output-tiff&quot; transmission=&quot;reference&quot; mimeType=&quot;image/geotiff&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="265722170">&lt;wps:Output id=&quot;output-tiff&quot;&gt;</stringProp>
              <stringProp name="924421445">&lt;wps:Reference mimeType=&quot;image/geotiff&quot; xlin:href=&quot;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TiffDownloader with GeoTIFF output (Base64)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;base-url&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;https://www.sd-kama.de/geoserver/rain_cotopaxi/wcs&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;coverage-id&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;rain_cotopaxi:duration_latacunga_city&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output-tiff&quot; transmission=&quot;value&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="265722170">&lt;wps:Output id=&quot;output-tiff&quot;&gt;</stringProp>
              <stringProp name="1446657372">&lt;wps:Data encoding=&quot;base64&quot; mimeType=&quot;image/geotiff&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-1553359750">TU0AKgAAAAgAEQEAAAMAAAABB48AAAEBAAMAAAABCv0AAAECAAMAAAABABAAAAEDAAMAAAABAAEA</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TiffDownloader with TIFF output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;base-url&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;https://www.sd-kama.de/geoserver/rain_cotopaxi/wcs&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;coverage-id&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;rain_cotopaxi:duration_latacunga_city&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output-tiff&quot; transmission=&quot;value&quot; mimeType=&quot;image/tiff&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="265722170">&lt;wps:Output id=&quot;output-tiff&quot;&gt;</stringProp>
              <stringProp name="-327116558">&lt;wps:Data mimeType=&quot;image/tiff&quot;&gt;&lt;![CDATA[</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TiffDownloader with TIFF output reference" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;base-url&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;https://www.sd-kama.de/geoserver/rain_cotopaxi/wcs&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;coverage-id&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;rain_cotopaxi:duration_latacunga_city&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output-tiff&quot; transmission=&quot;reference&quot; mimeType=&quot;image/tiff&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="265722170">&lt;wps:Output id=&quot;output-tiff&quot;&gt;</stringProp>
              <stringProp name="1600882630">&lt;wps:Reference mimeType=&quot;image/tiff&quot; xlin:href=&quot;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TiffDownloader with TIFF output (Base64)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;base-url&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;https://www.sd-kama.de/geoserver/rain_cotopaxi/wcs&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;coverage-id&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;rain_cotopaxi:duration_latacunga_city&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output-tiff&quot; transmission=&quot;value&quot; mimeType=&quot;image/tiff&quot; encoding=&quot;base64&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="265722170">&lt;wps:Output id=&quot;output-tiff&quot;&gt;</stringProp>
              <stringProp name="-1164962409">&lt;wps:Data encoding=&quot;base64&quot; mimeType=&quot;image/tiff&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-1553359750">TU0AKgAAAAgAEQEAAAMAAAABB48AAAEBAAMAAAABCv0AAAECAAMAAAABABAAAAEDAAMAAAABAAEA</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TiffDownloader with WFS output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.FlooddamageTiffDownloader&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;base-url&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;https://www.sd-kama.de/geoserver/rain_cotopaxi/wcs&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Input id=&quot;coverage-id&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;text/xml&quot;&gt;&#xd;
            &lt;wps:LiteralValue&gt;rain_cotopaxi:duration_latacunga_city&lt;/wps:LiteralValue&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output-tiff&quot; transmission=&quot;value&quot; mimeType=&quot;application/WFS&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="265722170">&lt;wps:Output id=&quot;output-tiff&quot;&gt;</stringProp>
              <stringProp name="-327116558">&lt;wps:Data mimeType=&quot;image/tiff&quot;&gt;&lt;![CDATA[</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SystemReliabilityProcess" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SR with original input and GeoJSON output" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0        http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.SystemReliabilityProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;damage_nodes&quot;&gt;&#xd;
        &lt;wps:Data mimeType=&quot;application/vnd.geo+json&quot;&gt;&#xd;
{&#xd;
&quot;type&quot;: &quot;FeatureCollection&quot;,&#xd;
&quot;name&quot;: &quot;E1_EPN_ExposureNodes_withDamage&quot;,&#xd;
&quot;features&quot;: [&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 4, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 13.8, &quot;Name_Node&quot;: &quot;LASSO&quot;, &quot;taxonomy&quot;: &quot;Substation&quot;, &quot;ProbFailure&quot;: 0.99115 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 766104.772625000216067, 9917642.46387499943376 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 5, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 13.8, &quot;Name_Node&quot;: &quot;SIGCHOS&quot;, &quot;taxonomy&quot;: &quot;Power Plant&quot;, &quot;ProbFailure&quot;: 0.84991 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 735417.364124999148771, 9922426.367 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 7, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 13.8, &quot;Name_Node&quot;: &quot;MULALO&quot;, &quot;taxonomy&quot;: &quot;Power Plant&quot;, &quot;ProbFailure&quot;: 0.07749 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 766190.103999999351799, 9912014.7835 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 9, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 13.8, &quot;Name_Node&quot;: &quot;SAN RAFAEL&quot;, &quot;taxonomy&quot;: &quot;Substation&quot;, &quot;ProbFailure&quot;: 0.39467 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 764524.146625000168569, 9896347.5415 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 3, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 13.8, &quot;Name_Node&quot;: &quot;MANA&quot;, &quot;taxonomy&quot;: &quot;Substation&quot;, &quot;ProbFailure&quot;: 0.7083 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 695223.1108750004787, 9894732.443125 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 2, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 13.8, &quot;Name_Node&quot;: &quot;ANGAMARCA&quot;, &quot;taxonomy&quot;: &quot;Substation&quot;, &quot;ProbFailure&quot;: 0.67653 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 731003.12887499993667, 9875136.673125 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 8, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 13.8, &quot;Name_Node&quot;: &quot;LA COCHA&quot;, &quot;taxonomy&quot;: &quot;Substation&quot;, &quot;ProbFailure&quot;: 0.43077 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 766514.381249999860302, 9898869.85349999927 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 10, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 13.8, &quot;Name_Node&quot;: &quot;CALVARIO&quot;, &quot;taxonomy&quot;: &quot;Substation&quot;, &quot;ProbFailure&quot;: 0.53267 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 765821.918624997837469, 9896938.2082499992102 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 1, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 13.8, &quot;Name_Node&quot;: &quot;PUJILI&quot;, &quot;taxonomy&quot;: &quot;Substation&quot;, &quot;ProbFailure&quot;: 0.60927 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 758898.710250000120141, 9895007.2265 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 6, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 13.8, &quot;Name_Node&quot;: &quot;SALCEDO&quot;, &quot;taxonomy&quot;: &quot;Substation&quot;, &quot;ProbFailure&quot;: 0.30424 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 767188.936874999199063, 9885739.502 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 11, &quot;VPRIMARIO&quot;: 230.0, &quot;VSECUNDARI&quot;: 138.0, &quot;Name_Node&quot;: &quot;TOTORAS&quot;, &quot;taxonomy&quot;: &quot;Power Plant&quot;, &quot;ProbFailure&quot;: 0.72976 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 766810.934109876397997, 9856370.942138871178031 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 12, &quot;VPRIMARIO&quot;: 138.0, &quot;VSECUNDARI&quot;: 138.0, &quot;Name_Node&quot;: &quot;AMBATO&quot;, &quot;taxonomy&quot;: &quot;Power Plant&quot;, &quot;ProbFailure&quot;: 0.56801 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 766802.964108574436978, 9864639.292311161756516 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 13, &quot;VPRIMARIO&quot;: 138.0, &quot;VSECUNDARI&quot;: 138.0, &quot;Name_Node&quot;: &quot;PUCARA&quot;, &quot;taxonomy&quot;: &quot;Power Plant&quot;, &quot;ProbFailure&quot;: 0.27088 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 783381.495682770852, 9881014.288951817899942 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 14, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 69.0, &quot;Name_Node&quot;: &quot;LAIGUA&quot;, &quot;taxonomy&quot;: &quot;Tap&quot;, &quot;ProbFailure&quot;: 0.32316 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 765844.751389403128996, 9904937.210617676377296 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 15, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 69.0, &quot;Name_Node&quot;: &quot;SANTA ROSA&quot;, &quot;taxonomy&quot;: &quot;Substation&quot;, &quot;ProbFailure&quot;: 0.74154 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 773160.681473158183508, 9959545.119353417307138 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 16, &quot;VPRIMARIO&quot;: 69.0, &quot;VSECUNDARI&quot;: 69.0, &quot;Name_Node&quot;: &quot;FAIRIS&quot;, &quot;taxonomy&quot;: &quot;Tap&quot;, &quot;ProbFailure&quot;: 0.08664 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 768116.21583494823426, 9875495.241784740239382 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 17, &quot;VPRIMARIO&quot;: 138.0, &quot;VSECUNDARI&quot;: 138.0, &quot;Name_Node&quot;: &quot;VICENTINA&quot;, &quot;taxonomy&quot;: &quot;Substation&quot;, &quot;ProbFailure&quot;: 0.77355 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 780729.355818726471625, 9977022.712616181001067 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 18, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;SAN RAFAEL - W&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 762261.468675636569969, 9894487.621349012479186 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 19, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;INDEPENDENT&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 746876.483388291206211, 9902970.963672673329711 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 20, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;SALCEDO - SW&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 761996.596171799232252, 9879791.576372776180506 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 21, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;SAN RAFAEL - NW&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 756356.201054029981606, 9905365.258044736459851 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 22, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;MULALO - S&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 770938.633139115991071, 9903922.903273375704885 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 23, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;LASSO - S&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 771812.981904450454749, 9912832.296057555824518 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 24, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;LASSO - W&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 752194.474043930647895, 9917605.15327656082809 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 25, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;LASSO - N&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 768902.049733974738047, 9920863.710582004860044 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 26, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;LASSO - SW&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 762838.791430077515543, 9911505.448269676417112 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 27, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;SALCEDO - N&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 769643.580526043777354, 9891245.598202349618077 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 28, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;SALCEDO - E&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 776815.017099232412875, 9885344.106839733198285 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 29, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;SALCEDO - NW&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 764943.331046151230112, 9885035.164495818316936 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 30, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;INDEPENDENT&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 750998.338214327581227, 9882661.517642688006163 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 31, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;LA COCHA - SW&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 765773.784201959613711, 9898294.942378727719188 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 32, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;CENTRO - SE&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 766801.969619568902999, 9894201.266433268785477 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 33, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;CENTRO - E&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 773310.492182473302819, 9897277.412082433700562 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 34, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;CENTRO - E - UNDERGROUND&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 765305.284219802124426, 9896782.598606929183006 ] } },&#xd;
{ &quot;type&quot;: &quot;Feature&quot;, &quot;properties&quot;: { &quot;FID&quot;: 35, &quot;VPRIMARIO&quot;: 13.8, &quot;VSECUNDARI&quot;: 0.1, &quot;Name_Node&quot;: &quot;CENTRO RIVER CROSS&quot;, &quot;taxonomy&quot;: &quot;Consumer&quot;, &quot;ProbFailure&quot;: 0.0 }, &quot;geometry&quot;: { &quot;type&quot;: &quot;Point&quot;, &quot;coordinates&quot;: [ 765276.695747714489698, 9896391.617403216660023 ] } }&#xd;
]&#xd;
}&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;damage_consumer_areas&quot; transmission=&quot;value&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-129447952">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;</stringProp>
              <stringProp name="1865527686">&lt;wps:Output id=&quot;damage_consumer_areas&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-640610121">{&quot;type&quot;:&quot;FeatureCollection&quot;</stringProp>
              <stringProp name="2030431725">&quot;properties&quot;:</stringProp>
              <stringProp name="1040278807">&quot;FID&quot;:</stringProp>
              <stringProp name="-405129849">&quot;population&quot;:</stringProp>
              <stringProp name="-79081090">&quot;Shape_Length&quot;:</stringProp>
              <stringProp name="-31871181">&quot;Prob_Disruption&quot;:</stringProp>
              <stringProp name="2079633511">&quot;Area&quot;:</stringProp>
              <stringProp name="-1858612507">&quot;Name&quot;:</stringProp>
              <stringProp name="-488414590">&quot;Name&quot;:&quot;CENTRO - E - UNDERGROUND&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="QuakeMLTransformationProcess" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuakeMLTransformation from QuakeML to GeoJSON" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
        &lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&#xd;
            &lt;eventParameters publicID=&quot;quakeml:quakeledger/0&quot; xmlns=&quot;http://quakeml.org/xmlns/bed/1.2&quot;&gt;&#xd;
                &lt;event publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
                    &lt;preferredOriginID&gt;quakeml:quakeledger/84945&lt;/preferredOriginID&gt;&#xd;
                    &lt;preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/preferredMagnitudeID&gt;&#xd;
                    &lt;type&gt;earthquake&lt;/type&gt;&#xd;
                    &lt;description&gt;&#xd;
                        &lt;text&gt;stochastic&lt;/text&gt;&#xd;
                    &lt;/description&gt;&#xd;
                    &lt;origin publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
                        &lt;time&gt;&#xd;
                            &lt;value&gt;2019-01-01T00:00:00.000000Z&lt;/value&gt;&#xd;
                            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                        &lt;/time&gt;&#xd;
                        &lt;latitude&gt;&#xd;
                            &lt;value&gt;-30.9227&lt;/value&gt;&#xd;
                            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                        &lt;/latitude&gt;&#xd;
                        &lt;longitude&gt;&#xd;
                            &lt;value&gt;-71.49875&lt;/value&gt;&#xd;
                            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                        &lt;/longitude&gt;&#xd;
                        &lt;depth&gt;&#xd;
                            &lt;value&gt;34.75117&lt;/value&gt;&#xd;
                            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                        &lt;/depth&gt;&#xd;
                        &lt;creationInfo&gt;&#xd;
                            &lt;author&gt;GFZ&lt;/author&gt;&#xd;
                        &lt;/creationInfo&gt;&#xd;
                        &lt;originUncertainty&gt;&#xd;
                            &lt;horizontalUncertainty&gt;NaN&lt;/horizontalUncertainty&gt;&#xd;
                            &lt;minHorizontalUncertainty&gt;NaN&lt;/minHorizontalUncertainty&gt;&#xd;
                            &lt;maxHorizontalUncertainty&gt;NaN&lt;/maxHorizontalUncertainty&gt;&#xd;
                            &lt;azimuthMaxHorizontalUncertainty&gt;NaN&lt;/azimuthMaxHorizontalUncertainty&gt;&#xd;
                        &lt;/originUncertainty&gt;&#xd;
                    &lt;/origin&gt;&#xd;
                    &lt;magnitude publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
                        &lt;mag&gt;&#xd;
                            &lt;value&gt;8.35&lt;/value&gt;&#xd;
                            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                        &lt;/mag&gt;&#xd;
                        &lt;type&gt;MW&lt;/type&gt;&#xd;
                        &lt;creationInfo&gt;&#xd;
                            &lt;author&gt;GFZ&lt;/author&gt;&#xd;
                        &lt;/creationInfo&gt;&#xd;
                    &lt;/magnitude&gt;&#xd;
                    &lt;focalMechanism publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
                        &lt;nodalPlanes preferredPlane=&quot;1&quot;&gt;&#xd;
                            &lt;nodalPlane1&gt;&#xd;
                                &lt;strike&gt;&#xd;
                                    &lt;value&gt;7.310981&lt;/value&gt;&#xd;
                                    &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                                &lt;/strike&gt;&#xd;
                                &lt;dip&gt;&#xd;
                                    &lt;value&gt;16.352970000000003&lt;/value&gt;&#xd;
                                    &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                                &lt;/dip&gt;&#xd;
                                &lt;rake&gt;&#xd;
                                    &lt;value&gt;90.0&lt;/value&gt;&#xd;
                                    &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                                &lt;/rake&gt;&#xd;
                            &lt;/nodalPlane1&gt;&#xd;
                        &lt;/nodalPlanes&gt;&#xd;
                    &lt;/focalMechanism&gt;&#xd;
                &lt;/event&gt;&#xd;
            &lt;/eventParameters&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-129447952">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="1650827515">{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;Point&quot;,&quot;coordinates&quot;:[-71.4987,-30.9227]},&quot;properties&quot;:{&quot;publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;preferredOriginID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;preferredMagnitudeID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;type&quot;:&quot;earthquake&quot;,&quot;description.text&quot;:&quot;stochastic&quot;,&quot;origin.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;origin.time.value&quot;:&quot;2019-01-01T00:00:00.000000Z&quot;,&quot;origin.depth.value&quot;:&quot;34.75117&quot;,&quot;origin.creationInfo.value&quot;:&quot;GFZ&quot;,&quot;magnitude.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;magnitude.mag.value&quot;:&quot;8.35&quot;,&quot;magnitude.type&quot;:&quot;MW&quot;,&quot;magnitude.creationInfo.value&quot;:&quot;GFZ&quot;,&quot;focalMechanism.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.strike.value&quot;:&quot;7.310981&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.dip.value&quot;:&quot;16.352970000000003&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.rake.value&quot;:&quot;90.0&quot;,&quot;focalMechanism.nodalPlanes.preferredPlane&quot;:&quot;nodalPlane1&quot;},&quot;id&quot;:&quot;quakeml:quakeledger\/84945&quot;}]}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuakeMLTransformation from QuakeML to GML" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
        &lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&#xd;
            &lt;eventParameters publicID=&quot;quakeml:quakeledger/0&quot; xmlns=&quot;http://quakeml.org/xmlns/bed/1.2&quot;&gt;&#xd;
                &lt;event publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
                    &lt;preferredOriginID&gt;quakeml:quakeledger/84945&lt;/preferredOriginID&gt;&#xd;
                    &lt;preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/preferredMagnitudeID&gt;&#xd;
                    &lt;type&gt;earthquake&lt;/type&gt;&#xd;
                    &lt;description&gt;&#xd;
                        &lt;text&gt;stochastic&lt;/text&gt;&#xd;
                    &lt;/description&gt;&#xd;
                    &lt;origin publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
                        &lt;time&gt;&#xd;
                            &lt;value&gt;2019-01-01T00:00:00.000000Z&lt;/value&gt;&#xd;
                            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                        &lt;/time&gt;&#xd;
                        &lt;latitude&gt;&#xd;
                            &lt;value&gt;-30.9227&lt;/value&gt;&#xd;
                            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                        &lt;/latitude&gt;&#xd;
                        &lt;longitude&gt;&#xd;
                            &lt;value&gt;-71.49875&lt;/value&gt;&#xd;
                            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                        &lt;/longitude&gt;&#xd;
                        &lt;depth&gt;&#xd;
                            &lt;value&gt;34.75117&lt;/value&gt;&#xd;
                            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                        &lt;/depth&gt;&#xd;
                        &lt;creationInfo&gt;&#xd;
                            &lt;author&gt;GFZ&lt;/author&gt;&#xd;
                        &lt;/creationInfo&gt;&#xd;
                        &lt;originUncertainty&gt;&#xd;
                            &lt;horizontalUncertainty&gt;NaN&lt;/horizontalUncertainty&gt;&#xd;
                            &lt;minHorizontalUncertainty&gt;NaN&lt;/minHorizontalUncertainty&gt;&#xd;
                            &lt;maxHorizontalUncertainty&gt;NaN&lt;/maxHorizontalUncertainty&gt;&#xd;
                            &lt;azimuthMaxHorizontalUncertainty&gt;NaN&lt;/azimuthMaxHorizontalUncertainty&gt;&#xd;
                        &lt;/originUncertainty&gt;&#xd;
                    &lt;/origin&gt;&#xd;
                    &lt;magnitude publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
                        &lt;mag&gt;&#xd;
                            &lt;value&gt;8.35&lt;/value&gt;&#xd;
                            &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                        &lt;/mag&gt;&#xd;
                        &lt;type&gt;MW&lt;/type&gt;&#xd;
                        &lt;creationInfo&gt;&#xd;
                            &lt;author&gt;GFZ&lt;/author&gt;&#xd;
                        &lt;/creationInfo&gt;&#xd;
                    &lt;/magnitude&gt;&#xd;
                    &lt;focalMechanism publicID=&quot;quakeml:quakeledger/84945&quot;&gt;&#xd;
                        &lt;nodalPlanes preferredPlane=&quot;1&quot;&gt;&#xd;
                            &lt;nodalPlane1&gt;&#xd;
                                &lt;strike&gt;&#xd;
                                    &lt;value&gt;7.310981&lt;/value&gt;&#xd;
                                    &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                                &lt;/strike&gt;&#xd;
                                &lt;dip&gt;&#xd;
                                    &lt;value&gt;16.352970000000003&lt;/value&gt;&#xd;
                                    &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                                &lt;/dip&gt;&#xd;
                                &lt;rake&gt;&#xd;
                                    &lt;value&gt;90.0&lt;/value&gt;&#xd;
                                    &lt;uncertainty&gt;NaN&lt;/uncertainty&gt;&#xd;
                                &lt;/rake&gt;&#xd;
                            &lt;/nodalPlane1&gt;&#xd;
                        &lt;/nodalPlanes&gt;&#xd;
                    &lt;/focalMechanism&gt;&#xd;
                &lt;/event&gt;&#xd;
            &lt;/eventParameters&gt;&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-516217402">&lt;wps:Data schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-1429770921">&lt;gml:FeatureCollection xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot; xmlns:n52=&quot;</stringProp>
              <stringProp name="-1419715969">            &lt;gml:boundedBy&gt;
              &lt;gml:Envelope srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;
                &lt;gml:lowerCorner&gt;-71.49875 -30.9227&lt;/gml:lowerCorner&gt;
                &lt;gml:upperCorner&gt;-71.49875 -30.9227&lt;/gml:upperCorner&gt;
              &lt;/gml:Envelope&gt;
            &lt;/gml:boundedBy&gt;
            &lt;n52:the_geom&gt;
              &lt;gml:MultiPoint srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;
                &lt;gml:pointMember&gt;
                  &lt;gml:Point srsDimension=&quot;2&quot;&gt;
                    &lt;gml:pos&gt;-71.49875 -30.9227&lt;/gml:pos&gt;
                  &lt;/gml:Point&gt;
                &lt;/gml:pointMember&gt;
              &lt;/gml:MultiPoint&gt;
            &lt;/n52:the_geom&gt;
            &lt;n52:publicID&gt;quakeml:quakeledger/84945&lt;/n52:publicID&gt;
            &lt;n52:preferredOriginID&gt;quakeml:quakeledger/84945&lt;/n52:preferredOriginID&gt;
            &lt;n52:preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/n52:preferredMagnitudeID&gt;
            &lt;n52:type&gt;earthquake&lt;/n52:type&gt;
            &lt;n52:description.text&gt;stochastic&lt;/n52:description.text&gt;
            &lt;n52:origin.publicID&gt;quakeml:quakeledger/84945&lt;/n52:origin.publicID&gt;
            &lt;n52:origin.time.value&gt;2019-01-01T00:00:00.000000Z&lt;/n52:origin.time.value&gt;
            &lt;n52:origin.depth.value&gt;34.75117&lt;/n52:origin.depth.value&gt;
            &lt;n52:origin.creationInfo.value&gt;GFZ&lt;/n52:origin.creationInfo.value&gt;
            &lt;n52:magnitude.publicID&gt;quakeml:quakeledger/84945&lt;/n52:magnitude.publicID&gt;
            &lt;n52:magnitude.mag.value&gt;8.35&lt;/n52:magnitude.mag.value&gt;
            &lt;n52:magnitude.type&gt;MW&lt;/n52:magnitude.type&gt;
            &lt;n52:magnitude.creationInfo.value&gt;GFZ&lt;/n52:magnitude.creationInfo.value&gt;
            &lt;n52:focalMechanism.publicID&gt;quakeml:quakeledger/84945&lt;/n52:focalMechanism.publicID&gt;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;7.310981&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;16.352970000000003&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;90.0&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;
            &lt;n52:focalMechanism.nodalPlanes.preferredPlane&gt;nodalPlane1&lt;/n52:focalMechanism.nodalPlanes.preferredPlane&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuakeMLTransformation from GeoJSON to QuakeML" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
        &lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;&#xd;
{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;Point&quot;,&quot;coordinates&quot;:[-71.4987,-30.9227]},&quot;properties&quot;:{&quot;preferredOriginID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;preferredMagnitudeID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;type&quot;:&quot;earthquake&quot;,&quot;description.text&quot;:&quot;stochastic&quot;,&quot;origin.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;origin.time.value&quot;:&quot;2019-01-01T00:00:00.000000Z&quot;,&quot;origin.depth.value&quot;:&quot;34.75117&quot;,&quot;origin.creationInfo.value&quot;:&quot;GFZ&quot;,&quot;magnitude.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;magnitude.mag.value&quot;:&quot;8.35&quot;,&quot;magnitude.type&quot;:&quot;MW&quot;,&quot;magnitude.creationInfo.value&quot;:&quot;GFZ&quot;,&quot;focalMechanism.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.strike.value&quot;:&quot;7.310981&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.dip.value&quot;:&quot;16.352970000000003&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.rake.value&quot;:&quot;90.0&quot;,&quot;focalMechanism.nodalPlanes.preferredPlane&quot;:&quot;nodalPlane1&quot;},&quot;id&quot;:&quot;quakeml:quakeledger\/84945&quot;}]}&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="764642112">&lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-837725482">&lt;ns:eventParameters xmlns:ns=&quot;http://quakeml.org/xmlns/bed/1.2&quot; publicID=&quot;quakeml:quakeledger/0&quot;&gt;</stringProp>
              <stringProp name="-2008653665">&lt;ns:event publicID=&quot;quakeml:quakeledger/84945&quot;&gt;</stringProp>
              <stringProp name="2009926746">&lt;ns:type&gt;earthquake&lt;/ns:type&gt;</stringProp>
              <stringProp name="-2047880451">&lt;ns:origin publicID=&quot;quakeml:quakeledger/84945&quot;&gt;</stringProp>
              <stringProp name="189692224">&lt;ns:uncertainty&gt;NaN&lt;/ns:uncertainty&gt;</stringProp>
              <stringProp name="-1885000740">&lt;ns:rake&gt;</stringProp>
              <stringProp name="-615405076">&lt;ns:dip&gt;</stringProp>
              <stringProp name="-1866391725">&lt;ns:strike&gt;</stringProp>
              <stringProp name="-1951612076">&lt;ns:nodalPlane1&gt;</stringProp>
              <stringProp name="1363535225">&lt;ns:nodalPlanes preferredPlane=&quot;1&quot;&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuakeMLTransformation from GeoJSON to GML" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
        &lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;&#xd;
{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;Point&quot;,&quot;coordinates&quot;:[-71.4987,-30.9227]},&quot;properties&quot;:{&quot;preferredOriginID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;preferredMagnitudeID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;type&quot;:&quot;earthquake&quot;,&quot;description.text&quot;:&quot;stochastic&quot;,&quot;origin.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;origin.time.value&quot;:&quot;2019-01-01T00:00:00.000000Z&quot;,&quot;origin.depth.value&quot;:&quot;34.75117&quot;,&quot;origin.creationInfo.value&quot;:&quot;GFZ&quot;,&quot;magnitude.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;magnitude.mag.value&quot;:&quot;8.35&quot;,&quot;magnitude.type&quot;:&quot;MW&quot;,&quot;magnitude.creationInfo.value&quot;:&quot;GFZ&quot;,&quot;focalMechanism.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.strike.value&quot;:&quot;7.310981&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.dip.value&quot;:&quot;16.352970000000003&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.rake.value&quot;:&quot;90.0&quot;,&quot;focalMechanism.nodalPlanes.preferredPlane&quot;:&quot;nodalPlane1&quot;},&quot;id&quot;:&quot;quakeml:quakeledger\/84945&quot;}]}&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-516217402">&lt;wps:Data schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-1429770921">&lt;gml:FeatureCollection xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot; xmlns:n52=&quot;</stringProp>
              <stringProp name="1922758112">            &lt;gml:boundedBy&gt;
              &lt;gml:Envelope srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;
                &lt;gml:lowerCorner&gt;-71.4987 -30.9227&lt;/gml:lowerCorner&gt;
                &lt;gml:upperCorner&gt;-71.4987 -30.9227&lt;/gml:upperCorner&gt;
              &lt;/gml:Envelope&gt;
            &lt;/gml:boundedBy&gt;
            &lt;n52:the_geom&gt;
              &lt;gml:MultiPoint srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;
                &lt;gml:pointMember&gt;
                  &lt;gml:Point srsDimension=&quot;2&quot;&gt;
                    &lt;gml:pos&gt;-71.4987 -30.9227&lt;/gml:pos&gt;
                  &lt;/gml:Point&gt;
                &lt;/gml:pointMember&gt;
              &lt;/gml:MultiPoint&gt;
            &lt;/n52:the_geom&gt;
            &lt;n52:publicID&gt;quakeml:quakeledger/84945&lt;/n52:publicID&gt;
            &lt;n52:preferredOriginID&gt;quakeml:quakeledger/84945&lt;/n52:preferredOriginID&gt;
            &lt;n52:preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/n52:preferredMagnitudeID&gt;
            &lt;n52:type&gt;earthquake&lt;/n52:type&gt;
            &lt;n52:description.text&gt;stochastic&lt;/n52:description.text&gt;
            &lt;n52:origin.publicID&gt;quakeml:quakeledger/84945&lt;/n52:origin.publicID&gt;
            &lt;n52:origin.time.value&gt;2019-01-01T00:00:00.000000Z&lt;/n52:origin.time.value&gt;
            &lt;n52:origin.depth.value&gt;34.75117&lt;/n52:origin.depth.value&gt;
            &lt;n52:origin.creationInfo.value&gt;GFZ&lt;/n52:origin.creationInfo.value&gt;
            &lt;n52:magnitude.publicID&gt;quakeml:quakeledger/84945&lt;/n52:magnitude.publicID&gt;
            &lt;n52:magnitude.mag.value&gt;8.35&lt;/n52:magnitude.mag.value&gt;
            &lt;n52:magnitude.type&gt;MW&lt;/n52:magnitude.type&gt;
            &lt;n52:magnitude.creationInfo.value&gt;GFZ&lt;/n52:magnitude.creationInfo.value&gt;
            &lt;n52:focalMechanism.publicID&gt;quakeml:quakeledger/84945&lt;/n52:focalMechanism.publicID&gt;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;7.310981&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;16.352970000000003&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;90.0&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;
            &lt;n52:focalMechanism.nodalPlanes.preferredPlane&gt;nodalPlane1&lt;/n52:focalMechanism.nodalPlanes.preferredPlane&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuakeMLTransformation from GML to QuakeML" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
    &lt;wps:Data schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;&#xd;
      &lt;gml:FeatureCollection xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot; xmlns:n52=&quot;http://www.52north.org/2957590d-6aad-4398-8bc3-9099594483bb&quot; xsi:schemaLocation=&quot;http://www.opengis.net/gml http://schemas.opengis.net/gml/3.1.1/base/feature.xsd http://www.52north.org/2957590d-6aad-4398-8bc3-9099594483bb https://raw.githubusercontent.com/riesgos/gfz-command-line-tool-repository/master/integration-tests/wps_static_schemas_quakeml_gml.xsd&quot;&gt;&#xd;
        &lt;gml:featureMembers&gt;&#xd;
          &lt;n52:Feature-2957590d-6aad-4398-8bc3-9099594483bb gml:id=&quot;ID0&quot;&gt;&#xd;
            &lt;gml:boundedBy&gt;&#xd;
              &lt;gml:Envelope srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;&#xd;
                &lt;gml:lowerCorner&gt;-71.4987 -30.9227&lt;/gml:lowerCorner&gt;&#xd;
                &lt;gml:upperCorner&gt;-71.4987 -30.9227&lt;/gml:upperCorner&gt;&#xd;
              &lt;/gml:Envelope&gt;&#xd;
            &lt;/gml:boundedBy&gt;&#xd;
            &lt;n52:the_geom&gt;&#xd;
              &lt;gml:MultiPoint srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;&#xd;
                &lt;gml:pointMember&gt;&#xd;
                  &lt;gml:Point srsDimension=&quot;2&quot;&gt;&#xd;
                    &lt;gml:pos&gt;-71.4987 -30.9227&lt;/gml:pos&gt;&#xd;
                  &lt;/gml:Point&gt;&#xd;
                &lt;/gml:pointMember&gt;&#xd;
              &lt;/gml:MultiPoint&gt;&#xd;
            &lt;/n52:the_geom&gt;&#xd;
            &lt;n52:publicID&gt;quakeml:quakeledger/84945&lt;/n52:publicID&gt;&#xd;
            &lt;n52:preferredOriginID&gt;quakeml:quakeledger/84945&lt;/n52:preferredOriginID&gt;&#xd;
            &lt;n52:preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/n52:preferredMagnitudeID&gt;&#xd;
            &lt;n52:type&gt;earthquake&lt;/n52:type&gt;&#xd;
            &lt;n52:description.text&gt;stochastic&lt;/n52:description.text&gt;&#xd;
            &lt;n52:origin.publicID&gt;quakeml:quakeledger/84945&lt;/n52:origin.publicID&gt;&#xd;
            &lt;n52:origin.time.value&gt;2019-01-01T00:00:00.000000Z&lt;/n52:origin.time.value&gt;&#xd;
            &lt;n52:origin.depth.value&gt;34.75117&lt;/n52:origin.depth.value&gt;&#xd;
            &lt;n52:origin.creationInfo.value&gt;GFZ&lt;/n52:origin.creationInfo.value&gt;&#xd;
            &lt;n52:magnitude.publicID&gt;quakeml:quakeledger/84945&lt;/n52:magnitude.publicID&gt;&#xd;
            &lt;n52:magnitude.mag.value&gt;8.35&lt;/n52:magnitude.mag.value&gt;&#xd;
            &lt;n52:magnitude.type&gt;MW&lt;/n52:magnitude.type&gt;&#xd;
            &lt;n52:magnitude.creationInfo.value&gt;GFZ&lt;/n52:magnitude.creationInfo.value&gt;&#xd;
            &lt;n52:focalMechanism.publicID&gt;quakeml:quakeledger/84945&lt;/n52:focalMechanism.publicID&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;7.310981&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;16.352970000000003&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;90.0&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.preferredPlane&gt;nodalPlane1&lt;/n52:focalMechanism.nodalPlanes.preferredPlane&gt;&#xd;
          &lt;/n52:Feature-2957590d-6aad-4398-8bc3-9099594483bb&gt;&#xd;
        &lt;/gml:featureMembers&gt;&#xd;
      &lt;/gml:FeatureCollection&gt;&#xd;
    &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="764642112">&lt;wps:Data schema=&quot;http://quakeml.org/xmlns/quakeml/1.2/QuakeML-1.2.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-837725482">&lt;ns:eventParameters xmlns:ns=&quot;http://quakeml.org/xmlns/bed/1.2&quot; publicID=&quot;quakeml:quakeledger/0&quot;&gt;</stringProp>
              <stringProp name="-2008653665">&lt;ns:event publicID=&quot;quakeml:quakeledger/84945&quot;&gt;</stringProp>
              <stringProp name="2009926746">&lt;ns:type&gt;earthquake&lt;/ns:type&gt;</stringProp>
              <stringProp name="-2047880451">&lt;ns:origin publicID=&quot;quakeml:quakeledger/84945&quot;&gt;</stringProp>
              <stringProp name="189692224">&lt;ns:uncertainty&gt;NaN&lt;/ns:uncertainty&gt;</stringProp>
              <stringProp name="-1885000740">&lt;ns:rake&gt;</stringProp>
              <stringProp name="-615405076">&lt;ns:dip&gt;</stringProp>
              <stringProp name="-1866391725">&lt;ns:strike&gt;</stringProp>
              <stringProp name="-1951612076">&lt;ns:nodalPlane1&gt;</stringProp>
              <stringProp name="1363535225">&lt;ns:nodalPlanes preferredPlane=&quot;1&quot;&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="QuakeMLTransformation from GML to GeoJSON" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.QuakeMLTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
    &lt;wps:Data schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;&#xd;
      &lt;gml:FeatureCollection xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot; xmlns:n52=&quot;http://www.52north.org/2957590d-6aad-4398-8bc3-9099594483bb&quot; xsi:schemaLocation=&quot;http://www.opengis.net/gml http://schemas.opengis.net/gml/3.1.1/base/feature.xsd http://www.52north.org/2957590d-6aad-4398-8bc3-9099594483bb https://raw.githubusercontent.com/riesgos/gfz-command-line-tool-repository/master/integration-tests/wps_static_schemas_quakeml_gml.xsd&quot;&gt;&#xd;
        &lt;gml:featureMembers&gt;&#xd;
          &lt;n52:Feature-2957590d-6aad-4398-8bc3-9099594483bb gml:id=&quot;ID0&quot;&gt;&#xd;
            &lt;gml:boundedBy&gt;&#xd;
              &lt;gml:Envelope srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;&#xd;
                &lt;gml:lowerCorner&gt;-71.4987 -30.9227&lt;/gml:lowerCorner&gt;&#xd;
                &lt;gml:upperCorner&gt;-71.4987 -30.9227&lt;/gml:upperCorner&gt;&#xd;
              &lt;/gml:Envelope&gt;&#xd;
            &lt;/gml:boundedBy&gt;&#xd;
            &lt;n52:the_geom&gt;&#xd;
              &lt;gml:MultiPoint srsDimension=&quot;2&quot; srsName=&quot;WGS84(DD)&quot;&gt;&#xd;
                &lt;gml:pointMember&gt;&#xd;
                  &lt;gml:Point srsDimension=&quot;2&quot;&gt;&#xd;
                    &lt;gml:pos&gt;-71.4987 -30.9227&lt;/gml:pos&gt;&#xd;
                  &lt;/gml:Point&gt;&#xd;
                &lt;/gml:pointMember&gt;&#xd;
              &lt;/gml:MultiPoint&gt;&#xd;
            &lt;/n52:the_geom&gt;&#xd;
            &lt;n52:publicID&gt;quakeml:quakeledger/84945&lt;/n52:publicID&gt;&#xd;
            &lt;n52:preferredOriginID&gt;quakeml:quakeledger/84945&lt;/n52:preferredOriginID&gt;&#xd;
            &lt;n52:preferredMagnitudeID&gt;quakeml:quakeledger/84945&lt;/n52:preferredMagnitudeID&gt;&#xd;
            &lt;n52:type&gt;earthquake&lt;/n52:type&gt;&#xd;
            &lt;n52:description.text&gt;stochastic&lt;/n52:description.text&gt;&#xd;
            &lt;n52:origin.publicID&gt;quakeml:quakeledger/84945&lt;/n52:origin.publicID&gt;&#xd;
            &lt;n52:origin.time.value&gt;2019-01-01T00:00:00.000000Z&lt;/n52:origin.time.value&gt;&#xd;
            &lt;n52:origin.depth.value&gt;34.75117&lt;/n52:origin.depth.value&gt;&#xd;
            &lt;n52:origin.creationInfo.value&gt;GFZ&lt;/n52:origin.creationInfo.value&gt;&#xd;
            &lt;n52:magnitude.publicID&gt;quakeml:quakeledger/84945&lt;/n52:magnitude.publicID&gt;&#xd;
            &lt;n52:magnitude.mag.value&gt;8.35&lt;/n52:magnitude.mag.value&gt;&#xd;
            &lt;n52:magnitude.type&gt;MW&lt;/n52:magnitude.type&gt;&#xd;
            &lt;n52:magnitude.creationInfo.value&gt;GFZ&lt;/n52:magnitude.creationInfo.value&gt;&#xd;
            &lt;n52:focalMechanism.publicID&gt;quakeml:quakeledger/84945&lt;/n52:focalMechanism.publicID&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;7.310981&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.strike.value&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;16.352970000000003&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.dip.value&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;90.0&lt;/n52:focalMechanism.nodalPlanes.nodalPlane1.rake.value&gt;&#xd;
            &lt;n52:focalMechanism.nodalPlanes.preferredPlane&gt;nodalPlane1&lt;/n52:focalMechanism.nodalPlanes.preferredPlane&gt;&#xd;
          &lt;/n52:Feature-2957590d-6aad-4398-8bc3-9099594483bb&gt;&#xd;
        &lt;/gml:featureMembers&gt;&#xd;
      &lt;/gml:FeatureCollection&gt;&#xd;
    &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-129447952">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="1650827515">{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;Point&quot;,&quot;coordinates&quot;:[-71.4987,-30.9227]},&quot;properties&quot;:{&quot;publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;preferredOriginID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;preferredMagnitudeID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;type&quot;:&quot;earthquake&quot;,&quot;description.text&quot;:&quot;stochastic&quot;,&quot;origin.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;origin.time.value&quot;:&quot;2019-01-01T00:00:00.000000Z&quot;,&quot;origin.depth.value&quot;:&quot;34.75117&quot;,&quot;origin.creationInfo.value&quot;:&quot;GFZ&quot;,&quot;magnitude.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;magnitude.mag.value&quot;:&quot;8.35&quot;,&quot;magnitude.type&quot;:&quot;MW&quot;,&quot;magnitude.creationInfo.value&quot;:&quot;GFZ&quot;,&quot;focalMechanism.publicID&quot;:&quot;quakeml:quakeledger\/84945&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.strike.value&quot;:&quot;7.310981&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.dip.value&quot;:&quot;16.352970000000003&quot;,&quot;focalMechanism.nodalPlanes.nodalPlane1.rake.value&quot;:&quot;90.0&quot;,&quot;focalMechanism.nodalPlanes.preferredPlane&quot;:&quot;nodalPlane1&quot;},&quot;id&quot;:&quot;quakeml:quakeledger\/84945&quot;}]}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ShakemapTransformationProcess" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ShakemapTransformation to GeoJSON" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
        &lt;wps:Data schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;&#xd;
${__FileToString(./example_shakemap.xml,,)}&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-129447952">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/vnd.geo+json&quot;&gt;</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-314080051">{&quot;type&quot;:&quot;FeatureCollection&quot;,&quot;features&quot;:[{&quot;type&quot;:&quot;Feature&quot;,&quot;geometry&quot;:{&quot;type&quot;:&quot;LineString&quot;,&quot;coordinates&quot;:[[</stringProp>
              <stringProp name="417969493">&quot;properties&quot;:{&quot;value&quot;:</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ShakemapTransformation to GML" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
        &lt;wps:Data schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;&#xd;
${__FileToString(./example_shakemap.xml,,)}&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; mimeType=&quot;text/xml&quot; encoding=&quot;UTF-8&quot; schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-516217402">&lt;wps:Data schema=&quot;http://schemas.opengis.net/gml/3.2.1/base/feature.xsd&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="1520905033">&lt;n52:the_geom&gt;</stringProp>
              <stringProp name="1220812130">&lt;n52:Feature-</stringProp>
              <stringProp name="725079514">&lt;gml:boundedBy&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ShakemapTransformation to GeoTIFF" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
        &lt;wps:Data schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;&#xd;
${__FileToString(./example_shakemap.xml,,)}&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1391814457">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;image/geotiff&quot;&gt;&lt;![CDATA[</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ShakemapTransformation to GeoTIFF (Base64)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0      http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.ShakemapTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
        &lt;wps:Data schema=&quot;http://earthquake.usgs.gov/eqcenter/shakemap&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;&#xd;
${__FileToString(./example_shakemap.xml,,)}&#xd;
        &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; mimeType=&quot;image/geotiff&quot; encoding=&quot;base64&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1446657372">&lt;wps:Data encoding=&quot;base64&quot; mimeType=&quot;image/geotiff&quot;&gt;</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
              <stringProp name="-319940396">TU0AKgAAAAgAEAEAAAMAAAABAMsAAAEBAAMAAAABAPEAAAECAAMAAAACAEAAQAEDAAMAAAABAAUA</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NrmlTransformationProcess" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NrmlTransformation to GeoJSON" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;wps:Execute service=&quot;WPS&quot; version=&quot;2.0.0&quot; xmlns:wps=&quot;http://www.opengis.net/wps/2.0&quot; xmlns:ows=&quot;http://www.opengis.net/ows/2.0&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/wps/2.0        http://schemas.opengis.net/wps/2.0/wpsExecute.xsd&quot; response=&quot;document&quot; mode=&quot;sync&quot;&gt;&#xd;
    &lt;ows:Identifier&gt;org.n52.gfz.riesgos.algorithm.impl.NrmlTransformationProcess&lt;/ows:Identifier&gt;&#xd;
    &lt;wps:Input id=&quot;input&quot;&gt;&#xd;
    &lt;wps:Data schema=&quot;http://openquake.org/xmlns/nrml/0.5&quot; encoding=&quot;UTF-8&quot; mimeType=&quot;text/xml&quot;&gt;&#xd;
      &lt;nrml xmlns=&quot;http://openquake.org/xmlns/nrml/0.4&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot;&gt;&#xd;
        &lt;exposureModel id=&quot;SARA_v1.0&quot; category=&quot;buildings&quot; taxonomySource=&quot;GEM&quot;&gt;&#xd;
          &lt;description&gt;GEM-SARA Model, project RIESGOS&lt;/description&gt;&#xd;
          &lt;conversions&gt;&#xd;
            &lt;costTypes&gt;&#xd;
              &lt;costType name=&quot;structural&quot; type=&quot;per_asset&quot; unit=&quot;USD&quot;/&gt;&#xd;
            &lt;/costTypes&gt;&#xd;
          &lt;/conversions&gt;&#xd;
          &lt;assets&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;92&quot; taxonomy=&quot;CR+PC/LWAL/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;985250.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;454&quot; taxonomy=&quot;CR/LWAL/DNO/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;89&quot; taxonomy=&quot;CR/LWAL/DNO/H:4,7&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;51500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;278&quot; taxonomy=&quot;CR/LWAL/DUC/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;35&quot; taxonomy=&quot;CR/LWAL/DUC/H:4,7&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;51765.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;8&quot; taxonomy=&quot;CR/LWAL/DUC/H:8,19&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;1168750.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;31&quot; taxonomy=&quot;ER+ETR/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;850000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;178&quot; taxonomy=&quot;ER+ETR/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;4037500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;25&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;55&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;1363&quot; taxonomy=&quot;MCF/DNO/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;2762500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;3208&quot; taxonomy=&quot;MCF/DNO/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;2337500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;641&quot; taxonomy=&quot;MCF/DUC/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;4037500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;96&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;192&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;862&quot; taxonomy=&quot;MR/DNO/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;676800.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;302&quot; taxonomy=&quot;MR/DUC/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;1168750.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;52&quot; taxonomy=&quot;MUR+ADO/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;32000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;5&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;10&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;712&quot; taxonomy=&quot;MUR+ADO/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;80000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;10&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;20&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;88&quot; taxonomy=&quot;MUR+STDRE/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;105000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;5&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;4&quot; taxonomy=&quot;MUR/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;26250.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;5&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;10&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;1959&quot; taxonomy=&quot;MUR/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;26250.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;5&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;10&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;2519&quot; taxonomy=&quot;UNK&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;746&quot; taxonomy=&quot;W+WLI/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;3902&quot; taxonomy=&quot;W+WLI/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;1160&quot; taxonomy=&quot;W+WS/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;4037500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;96&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;192&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05106&quot; number=&quot;1215&quot; taxonomy=&quot;W+WS/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.28895650986559&quot; lat=&quot;-33.05325395611865&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;203&quot; taxonomy=&quot;CR+PC/LWAL/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;985250.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;1097&quot; taxonomy=&quot;CR/LWAL/DNO/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;288&quot; taxonomy=&quot;CR/LWAL/DNO/H:4,7&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;51500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;366&quot; taxonomy=&quot;CR/LWAL/DUC/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;138&quot; taxonomy=&quot;CR/LWAL/DUC/H:4,7&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;51765.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;35&quot; taxonomy=&quot;CR/LWAL/DUC/H:8,19&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;1168750.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;268&quot; taxonomy=&quot;ER+ETR/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;850000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;1669&quot; taxonomy=&quot;ER+ETR/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;4037500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;25&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;55&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;878&quot; taxonomy=&quot;MCF/DNO/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;2762500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;3980&quot; taxonomy=&quot;MCF/DNO/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;2337500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;1126&quot; taxonomy=&quot;MCF/DUC/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;4037500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;96&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;192&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;931&quot; taxonomy=&quot;MR/DNO/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;676800.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;416&quot; taxonomy=&quot;MR/DUC/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;1168750.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;620&quot; taxonomy=&quot;MUR+ADO/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;32000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;5&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;10&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;6677&quot; taxonomy=&quot;MUR+ADO/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;80000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;10&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;20&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;194&quot; taxonomy=&quot;MUR+STDRE/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;105000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;5&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;1&quot; taxonomy=&quot;MUR/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;26250.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;5&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;10&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;1824&quot; taxonomy=&quot;MUR/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;26250.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;5&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;10&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;3649&quot; taxonomy=&quot;UNK&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;1472&quot; taxonomy=&quot;W+WLI/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;10897&quot; taxonomy=&quot;W+WLI/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;1668&quot; taxonomy=&quot;W+WS/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;4037500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;96&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;192&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05101&quot; number=&quot;3327&quot; taxonomy=&quot;W+WS/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.58336813721334&quot; lat=&quot;-33.08355859499458&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;185&quot; taxonomy=&quot;CR+PC/LWAL/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;985250.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;1440&quot; taxonomy=&quot;CR/LWAL/DNO/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;487&quot; taxonomy=&quot;CR/LWAL/DNO/H:4,7&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;51500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;499&quot; taxonomy=&quot;CR/LWAL/DUC/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;364&quot; taxonomy=&quot;CR/LWAL/DUC/H:4,7&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;51765.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;94&quot; taxonomy=&quot;CR/LWAL/DUC/H:8,19&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;1168750.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;58&quot; taxonomy=&quot;ER+ETR/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;850000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;341&quot; taxonomy=&quot;ER+ETR/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;4037500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;25&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;55&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;1763&quot; taxonomy=&quot;MCF/DNO/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;2762500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;5417&quot; taxonomy=&quot;MCF/DNO/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;2337500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;1586&quot; taxonomy=&quot;MCF/DUC/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;4037500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;96&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;192&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;1343&quot; taxonomy=&quot;MR/DNO/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;676800.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;508&quot; taxonomy=&quot;MR/DUC/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;1168750.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;6&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;12&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;134&quot; taxonomy=&quot;MUR+ADO/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;32000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;5&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;10&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;1363&quot; taxonomy=&quot;MUR+ADO/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;80000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;10&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;20&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;258&quot; taxonomy=&quot;MUR+STDRE/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;105000.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;5&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;2898&quot; taxonomy=&quot;MUR/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;26250.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;5&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;10&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;4931&quot; taxonomy=&quot;UNK&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;1380&quot; taxonomy=&quot;W+WLI/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;7883&quot; taxonomy=&quot;W+WLI/H:1,3&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;2229&quot; taxonomy=&quot;W+WS/H:1&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;4037500.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;96&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;192&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
            &lt;asset id=&quot;AREA # 05109&quot; number=&quot;2385&quot; taxonomy=&quot;W+WS/H:1,2&quot;&gt;&#xd;
              &lt;location lon=&quot;-71.4886588983034&quot; lat=&quot;-32.9192134778063&quot;/&gt;&#xd;
              &lt;costs&gt;&#xd;
                &lt;cost type=&quot;structural&quot; value=&quot;10740.0&quot;/&gt;&#xd;
              &lt;/costs&gt;&#xd;
              &lt;occupancies&gt;&#xd;
                &lt;occupancy period=&quot;day&quot; occupants=&quot;3&quot;/&gt;&#xd;
                &lt;occupancy period=&quot;night&quot; occupants=&quot;6&quot;/&gt;&#xd;
              &lt;/occupancies&gt;&#xd;
            &lt;/asset&gt;&#xd;
          &lt;/assets&gt;&#xd;
        &lt;/exposureModel&gt;&#xd;
      &lt;/nrml&gt;&#xd;
    &lt;/wps:Data&gt;&#xd;
    &lt;/wps:Input&gt;&#xd;
    &lt;wps:Output id=&quot;output&quot; transmission=&quot;value&quot; mimeType=&quot;application/vnd.geo+json&quot; encoding=&quot;UTF-8&quot;&gt;&lt;/wps:Output&gt;&#xd;
&lt;/wps:Execute&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP 200 Response Code" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Data Response" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="864558672">&lt;wps:Data encoding=&quot;UTF-8&quot; mimeType=&quot;application/json&quot;&gt;{&quot;features&quot;:[{&quot;geometry&quot;:{&quot;coordinates&quot;:[[[[</stringProp>
              <stringProp name="-1938268896">&lt;wps:Output id=&quot;output&quot;&gt;</stringProp>
              <stringProp name="-1079911648">&quot;type&quot;:&quot;Feature&quot;,&quot;properties&quot;:{</stringProp>
              <stringProp name="-945402052">&quot;crs&quot;:{&quot;type&quot;:&quot;name&quot;,&quot;properties&quot;:{&quot;name&quot;:&quot;urn:ogc:def:crs:OGC:1.3:CRS84&quot;}},&quot;type&quot;:&quot;FeatureCollection&quot;}</stringProp>
              <stringProp name="2111841679">&quot;expo&quot;:{</stringProp>
              <stringProp name="847901181">&quot;name&quot;:&quot;</stringProp>
              <stringProp name="-1984867271">&lt;wps:Result</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Testing Results" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
